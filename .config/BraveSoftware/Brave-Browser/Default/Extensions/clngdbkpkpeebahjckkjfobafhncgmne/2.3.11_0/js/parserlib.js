var parserlib=(()=>{const NamedColors=["currentColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","ActiveBorder","ActiveCaption","ActiveText","AppWorkspace","Background","ButtonBorder","ButtonFace","ButtonHighlight","ButtonShadow","ButtonText","Canvas","CanvasText","CaptionText","Field","FieldText","GrayText","Highlight","HighlightText","InactiveBorder","InactiveCaption","InactiveCaptionText","InfoBackground","InfoText","LinkText","Mark","MarkText","Menu","MenuText","Scrollbar","ThreeDDarkShadow","ThreeDFace","ThreeDHighlight","ThreeDLightShadow","ThreeDShadow","VisitedText","Window","WindowFrame","WindowText"],GlobalKeywords=["initial","inherit","revert","unset"],{assign,defineProperty:define}=Object,e={configurable:!0,enumerable:!0,writable:!0,value:null},t=Object.call.bind({}.hasOwnProperty),pick=(obj,keys,dst={})=>{for(const e of keys)dst[e]=obj[e];return dst},n=/\\(?:(?:([0-9a-fA-F]{1,6})|(.))[\t ]?|(\n))/g,r=(e,code,char,t)=>t?"":char||String.fromCodePoint(parseInt(code,16)),parseString=str=>str.slice(1,-1).replace(n,r),i=e=>e>=65&&e<=90?e+32:e;class EventDispatcher{constructor(){this._listeners={__proto__:null}}addListener(type,e){(this._listeners[type]||(this._listeners[type]=new Set)).add(e)}fire(event){const type="object"==typeof event&&event.type,list=this._listeners[type||event];list&&(type||(event={type}),list.forEach(e=>e(event)))}removeListener(type,e){const list=this._listeners[type];list&&list.delete(e)}}class ParseError extends Error{constructor(message,pos){super(),this.name=this.constructor.name,this.col=pos.col,this.line=pos.line,this.offset=pos.offset,this.message=message}}function clipString(e,len=30){return(e=`${e}`).length>len?e.slice(0,len)+"...":e}class Bucket{constructor(src){this.addFrom(src)}addFrom(src){for(let str of"string"==typeof src?[src]:src){let e=(str=str.toLowerCase()).charCodeAt(0);34===e&&(e=(str=str.slice(1,-1)).charCodeAt(0)),null==(src=this[e=100*e+str.length])?this[e]=str:"string"==typeof src?this[e]=[src,str]:src.push(str)}return this}join(sep){let res="";for(const e of Object.values(this))res+=`${res?sep:""}${"string"==typeof e?e:e.join(sep)}`;return res}has(tok,e=tok.code,n){const len=(n||tok).length;if(!t(this,e=100*e+len))return!1;if(1===len)return!0;const val=this[e],r=n||(tok.lowText??=tok.text.toLowerCase());return"string"==typeof val?val===r:val.includes(r)}}const o={attrIS:["i","s","]"],colors:NamedColors,marginSyms:(map={B:"bottom",C:"corner",L:"left",M:"middle",R:"right",T:"top",X:"center"},"B-X,B-L-C,B-L,B-R-C,B-R,L-B,L-M,L-T,R-B,R-M,R-T,T-X,T-L-C,T-L,T-R-C,T-R".replace(/[A-Z]/g,e=>map[e]).split(","))};var map;for(const e in o)o[e]=new Bucket(o[e]);for(const e of"and,andOr,auto,autoNone,evenOdd,fromTo,important,layer,n,none,not,notOnly,of,or,to".split(","))o[e]=new Bucket(e.split(/(?=[A-Z])/));const Combinators=[];Combinators[9]=Combinators[10]=Combinators[12]=Combinators[13]=Combinators[32]="descendant",Combinators[62]="child",Combinators[43]="adjacent-sibling",Combinators[126]="sibling",Combinators[124]="column";const Properties={__proto__:null,"accent-color":"auto | <color>","align-items":"normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]","align-content":"normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>","align-self":"auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>",all:GlobalKeywords.join(" | "),"alignment-baseline":"auto | baseline | use-script | before-edge | text-before-edge | after-edge | text-after-edge | central | middle | ideographic | alphabetic | hanging | mathematical",animation:"[ <time0+> || <timing-function> || <time> || [ infinite | <num0+> ] || <animation-direction> || <animation-fill-mode> || [ running | paused ] || [ none | <custom-ident> | <string> ] || <animation-timeline> ]#","animation-composition":"[ replace | add | accumulate ]#","animation-delay":"<time>#","animation-direction":"<animation-direction>#","animation-duration":"[ auto | <time0+> ]#","animation-fill-mode":"<animation-fill-mode>#","animation-iteration-count":"[ <num> | infinite ]#","animation-name":"[ none | <keyframes-name> ]#","animation-play-state":"[ running | paused ]#","animation-timeline":"<animation-timeline>#","animation-timing-function":"<timing-function>#",appearance:"none | auto","-moz-appearance":"none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized","-ms-appearance":"none | icon | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | combo-box | signature | password | normal","-webkit-appearance":"auto | none | button | button-bevel | caps-lock-indicator | caret | checkbox | default-button | listbox | listitem | media-fullscreen-button | media-mute-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbargripper-horizontal | scrollbargripper-vertical | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical","-o-appearance":"none | window | desktop | workspace | document | tooltip | dialog | button | push-button | hyperlink | radio | radio-button | checkbox | menu-item | tab | menu | menubar | pull-down-menu | pop-up-menu | list-menu | radio-group | checkbox-group | outline-tree | range | field | combo-box | signature | password | normal","aspect-ratio":"auto || <ratio>","backdrop-filter":"<filter-function-list> | none","backface-visibility":"<vis-hid>",background:"[ <bg-layer> , ]* <final-bg-layer>","background-attachment":"<attachment>#","background-blend-mode":"<blend-mode>","background-clip":"[ <box> | text ]#","background-color":"<color>","background-image":"<bg-image>#","background-origin":"<box>#","background-position":"<bg-position>#","background-position-x":"[ center | [ left | right ]? <len-pct>? ]#","background-position-y":"[ center | [ top | bottom ]? <len-pct>? ]#","background-repeat":"<repeat-style>#","background-size":"<bg-size>#","baseline-shift":"baseline | sub | super | <len-pct>","baseline-source":"auto | first | last","block-size":"<width>","border-collapse":"collapse | separate","border-image":"[ none | <image> ] || <border-image-slice> [ / <border-image-width> | / <border-image-width>? / <border-image-outset> ]? || <border-image-repeat>","border-image-outset":"[ <len> | <num> ]{1,4}","border-image-repeat":"[ stretch | repeat | round | space ]{1,2}","border-image-slice":"<border-image-slice>","border-image-source":"<image> | none","border-image-width":"[ <len-pct> | <num> | auto ]{1,4}","border-spacing":"<len>{1,2}","border-bottom-left-radius":"<len-pct>{1,2}","border-bottom-right-radius":"<len-pct>{1,2}","border-end-end-radius":"<len-pct>{1,2}","border-end-start-radius":"<len-pct>{1,2}","border-radius":"<len-pct0+>{1,4} [ / <len-pct0+>{1,4} ]?","border-start-end-radius":"<len-pct>{1,2}","border-start-start-radius":"<len-pct>{1,2}","border-top-left-radius":"<len-pct>{1,2}","border-top-right-radius":"<len-pct>{1,2}",bottom:"<top>","box-decoration-break":"slice | clone","box-shadow":"none | <shadow>#","box-sizing":"content-box | border-box","break-after":"<break-inside> | always | left | right | page | column","break-before":"<break-after>","break-inside":"auto | avoid | avoid-page | avoid-column","caret-color":"auto | <color>","caption-side":"top | bottom | inline-start | inline-end",clear:"none | right | left | both | inline-start | inline-end",clip:"<rect> | auto","clip-path":"<url> | [ <basic-shape> || <geometry-box> ] | none","clip-rule":"<fill-rule>",color:"<color>","color-interpolation":"auto | sRGB | linearRGB","color-interpolation-filters":"<color-interpolation>","color-profile":1,"color-rendering":"auto | optimizeSpeed | optimizeQuality","color-scheme":"normal | [ light | dark | <custom-ident> ]+ && only?","column-count":"<int> | auto","column-fill":"auto | balance","column-gap":"normal | <len-pct>","column-rule":"<border-shorthand>","column-rule-color":"<color>","column-rule-style":"<border-style>","column-rule-width":"<border-width>","column-span":"none | all","column-width":"<len> | auto",columns:1,contain:"none | strict | content | [ size || layout || style || paint ]","contain-intrinsic-size":"<contain-intrinsic>{1,2}",container:"<container-name> [ / <container-type> ]?","container-name":"none | <custom-ident>+","container-type":"normal || [ size | inline-size ]",content:"normal | none | <content-list> [ / <string> ]?","content-visibility":"auto | <vis-hid>","counter-increment":"<counter>","counter-reset":"<counter>","counter-set":"<counter>",cursor:"[ [ <url> | image-set() ] [ <num> <num> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | grab | grabbing | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out ]",cx:"<x>",cy:"<x>",d:1,direction:"ltr | rtl",display:"[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy> | -webkit-box | -webkit-inline-box | -ms-flexbox","dominant-baseline":"auto | text-bottom | alphabetic | ideographic | middle | central | mathematical | hanging | text-top","empty-cells":"show | hide","field-sizing":"fixed | content",fill:"<paint>","fill-opacity":"<num0-1>","fill-rule":"nonzero | evenodd",filter:"<filter-function-list> | <ie-function> | none",flex:"none | [ <num>{1,2} || <width> ]","flex-basis":"<width>","flex-direction":"row | row-reverse | column | column-reverse","flex-flow":"<flex-direction> || <flex-wrap>","flex-grow":"<num>","flex-shrink":"<num>","flex-wrap":"nowrap | wrap | wrap-reverse",float:"left | right | none | inline-start | inline-end","flood-color":1,"flood-opacity":"<num0-1>",font:"<font-short-tweak-no-pct>? <font-short-core> | [ <font-short-tweak-no-pct> || <pct> ]? <font-short-core> | caption | icon | menu | message-box | small-caption | status-bar","font-family":"[ <generic-family> | <family-name> ]#","font-feature-settings":"[ <ascii4> [ <int0+> | on | off ]? ]# | normal","font-kerning":"auto | normal | none","font-language-override":"normal | <string>","font-optical-sizing":"auto | none","font-palette":"none | normal | light | dark | <custom-ident>","font-size":"<absolute-size> | <relative-size> | <len-pct0+>","font-size-adjust":"<num> | none","font-stretch":"<font-stretch-named> | <pct>","font-style":"normal | italic | oblique <angle>?","font-synthesis":"none | [ weight || style ]","font-synthesis-style":"auto | none","font-synthesis-weight":"auto | none","font-synthesis-small-caps":"auto | none","font-variant":"normal | none | [ <font-variant-ligatures> || <font-variant-alternates> || <font-variant-caps> || <font-variant-numeric> || <font-variant-east-asian> ]","font-variant-alternates":"<font-variant-alternates> | normal","font-variant-caps":"<font-variant-caps> | normal","font-variant-east-asian":"<font-variant-east-asian> | normal","font-variant-emoji":"auto | text | emoji | unicode","font-variant-ligatures":"<font-variant-ligatures> | normal | none","font-variant-numeric":"<font-variant-numeric> | normal","font-variant-position":"normal | sub | super","font-variation-settings":"normal | [ <string> <num> ]#","font-weight":"normal | bold | bolder | lighter | <num1-1000>","forced-color-adjust":"auto | none | preserve-parent-color",gap:"<column-gap>{1,2}",grid:"<grid-template> | <grid-template-rows> / [ auto-flow && dense? ] <grid-auto-columns>? | [ auto-flow && dense? ] <grid-auto-rows>? / <grid-template-columns>","grid-area":"<grid-line> [ / <grid-line> ]{0,3}","grid-auto-columns":"<track-size>+","grid-auto-flow":"[ row | column ] || dense","grid-auto-rows":"<track-size>+","grid-column":"<grid-line> [ / <grid-line> ]?","grid-column-end":"<grid-line>","grid-column-gap":-1,"grid-column-start":"<grid-line>","grid-gap":-1,"grid-row":"<grid-line> [ / <grid-line> ]?","grid-row-end":"<grid-line>","grid-row-gap":-1,"grid-row-start":"<grid-line>","grid-template":"none | [ <grid-template-rows> / <grid-template-columns> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?","grid-template-areas":"none | <string>+","grid-template-columns":"<grid-template-rows>","grid-template-rows":"none | <track-list> | <auto-track-list> | subgrid [ <line-names> | repeat( [ <int1+> | auto-fill ] , <line-names>+ ) ]*","hanging-punctuation":"none | [ first || [ force-end | allow-end ] || last ]",height:"<width>","hyphenate-character":"<string> | auto","hyphenate-limit-chars":"[ auto | <int> ]{1,3}",hyphens:"none | manual | auto","image-orientation":"from-image | none | [ <angle> || flip ]","image-rendering":"auto | smooth | high-quality | crisp-edges | pixelated | optimizeSpeed | optimizeQuality | -webkit-optimize-contrast","image-resolution":1,"inline-size":"<width>",inset:"<top>{1,4}","inset-block":"<top>{1,2}","inset-block-end":"<top>","inset-block-start":"<top>","inset-inline":"<top>{1,2}","inset-inline-end":"<top>","inset-inline-start":"<top>",isolation:"auto | isolate","justify-content":"normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]","justify-items":"normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ] | [ legacy || [ left | right | center ] ]","justify-self":"auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]",left:"<top>","letter-spacing":"<len> | normal","lighting-color":"<color>","line-height":"<line-height>","line-break":"auto | loose | normal | strict | anywhere","list-style":"<list-style-position> || <list-style-image> || <list-style-type>","list-style-image":"<image> | none","list-style-position":"inside | outside","list-style-type":"<string> | disc | circle | square | decimal | decimal-leading-zero | lower-roman | upper-roman | lower-greek | lower-latin | upper-latin | armenian | georgian | lower-alpha | upper-alpha | none | symbols()","math-depth":"auto-add | add(<int>) | <int>","math-shift":"<math-style>","math-style":"normal | compact",margin:"<width>{1,4}","margin-bottom":"<width>","margin-left":"<width>","margin-right":"<width>","margin-top":"<width>","margin-block":"<width>{1,2}","margin-block-end":"<width>","margin-block-start":"<width>","margin-inline":"<width>{1,2}","margin-inline-end":"<width>","margin-inline-start":"<width>",marker:-1,"marker-end":1,"marker-mid":1,"marker-start":1,mask:"[ [ none | <image> ] || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode> ]#","mask-border":"<mask-border-source> ||<mask-border-slice> [ / <mask-border-width>? [ / <mask-border-outset> ]? ]? ||<mask-border-repeat> || <mask-border-mode>","mask-border-mode":"<mask-type>","mask-border-outset":"[ <len> | <num> ]{1,4}","mask-border-repeat":"[ stretch | repeat | round | space ]{1,2}","mask-border-slice":"<num-pct>{1,4} fill?","mask-border-source":"none | <image>","mask-border-width":"[ <len-pct> | <num> | auto ]{1,4}","mask-clip":"[ <coord-box> | no-clip ]#","mask-composite":"<compositing-operator>#","mask-image":"[ none | <image> ]#","mask-mode":"<masking-mode>#","mask-origin":"<coord-box>#","mask-position":"<position>#","mask-repeat":"<repeat-style>#","mask-size":"<bg-size>#","mask-type":"luminance | alpha","max-height":"<width-max>","max-width":"<width-max>","min-height":"<width>","min-width":"<width>","max-block-size":"<width-max>","max-inline-size":"<width-max>","min-block-size":"<width>","min-inline-size":"<width>","mix-blend-mode":"<blend-mode>","object-fit":"fill | contain | cover | none | scale-down","object-position":"<position>","object-view-box":"none | <inset> | <rect> | <xywh>",offset:"[ <offset-position>? <offset-path> [<len-pct> || <offset-rotate>]? | <offset-position> ] [ / <offset-anchor> ]?","offset-anchor":"auto | <position>","offset-distance":"<len-pct>","offset-path":"none | [ <ray> | <url> | <basic-shape> ] || <coord-box>","offset-position":"auto | <position>","offset-rotate":"[ auto | reverse ] || <angle>",opacity:"<num0-1> | <pct>",order:"<int>",orphans:"<int>",outline:"[ <color> | invert ] || [ auto | <border-style> ] || <border-width>","outline-color":"<color> | invert","outline-offset":"<len>","outline-style":"<border-style> | auto","outline-width":"<border-width>",overflow:"<overflow>{1,2}","overflow-anchor":"auto | none","overflow-block":"<overflow>","overflow-clip-margin":"visual-box | <len0+>","overflow-inline":"<overflow>","overflow-wrap":"normal | break-word | anywhere","overflow-x":"<overflow>","overflow-y":"<overflow>","overscroll-behavior":"<overscroll>{1,2}","overscroll-behavior-block":"<overscroll>","overscroll-behavior-inline":"<overscroll>","overscroll-behavior-x":"<overscroll>","overscroll-behavior-y":"<overscroll>",padding:"<len-pct0+>{1,4}","padding-block":"<len-pct0+>{1,2}","padding-block-end":"<len-pct0+>","padding-block-start":"<len-pct0+>","padding-bottom":"<len-pct0+>","padding-inline":"<len-pct0+>{1,2}","padding-inline-end":"<len-pct0+>","padding-inline-start":"<len-pct0+>","padding-left":"<len-pct0+>","padding-right":"<len-pct0+>","padding-top":"<len-pct0+>",page:"auto | <custom-ident>","page-break-after":"auto | always | avoid | left | right | recto | verso","page-break-before":"<page-break-after>","page-break-inside":"auto | avoid","paint-order":"normal | [ fill || stroke || markers ]",perspective:"none | <len0+>","perspective-origin":"<position>","place-content":"<align-content> <justify-content>?","place-items":"[ normal | stretch | <baseline-position> | <self-position> ] [ normal | stretch | <baseline-position> | <self-position> ]?","place-self":"<align-self> <justify-self>?","pointer-events":"auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all",position:"static | relative | absolute | fixed | sticky","print-color-adjust":"economy | exact",quotes:1,r:1,rx:"<x> | auto",ry:"<rx>","rendering-intent":1,resize:"none | both | horizontal | vertical | block | inline",right:"<top>",rotate:"none | [ x | y | z | <num>{3} ]? && <angle>","row-gap":"<column-gap>","ruby-align":1,"ruby-position":1,scale:"none | <num-pct>{1,3}","scroll-behavior":"auto | smooth","scroll-margin":"<len>{1,4}","scroll-margin-bottom":"<len>","scroll-margin-left":"<len>","scroll-margin-right":"<len>","scroll-margin-top":"<len>","scroll-margin-block":"<len>{1,2}","scroll-margin-block-end":"<len>","scroll-margin-block-start":"<len>","scroll-margin-inline":"<len>{1,2}","scroll-margin-inline-end":"<len>","scroll-margin-inline-start":"<len>","scroll-padding":"<top>{1,4}","scroll-padding-left":"<top>","scroll-padding-right":"<top>","scroll-padding-top":"<top>","scroll-padding-bottom":"<top>","scroll-padding-block":"<top>{1,2}","scroll-padding-block-end":"<top>","scroll-padding-block-start":"<top>","scroll-padding-inline":"<top>{1,2}","scroll-padding-inline-end":"<top>","scroll-padding-inline-start":"<top>","scroll-snap-align":"[ none | start | end | center ]{1,2}","scroll-snap-stop":"normal | always","scroll-snap-type":"none | [ x | y | block | inline | both ] [ mandatory | proximity ]?","scroll-timeline":"[ <scroll-timeline-name> [ <scroll-timeline-axis> || <scroll-timeline-attachment> ]? ]#","scroll-timeline-attachment":"[ local | defer | ancestor ]#","scroll-timeline-axis":"<axis>#","scroll-timeline-name":"none | <custom-ident>#","scrollbar-color":"auto | dark | light | <color>{2}","scrollbar-gutter":"auto | stable && both-edges?","scrollbar-width":"auto | thin | none","shape-image-threshold":"<num-pct>","shape-margin":"<len-pct>","shape-rendering":"auto | optimizeSpeed | crispEdges | geometricPrecision","shape-outside":"none | [ <basic-shape> || <shape-box> ] | <image>",speak:"auto | never | always","stop-color":1,"stop-opacity":"<num0-1>",stroke:"<paint>","stroke-dasharray":"none | <dasharray>","stroke-dashoffset":"<len-pct> | <num>","stroke-linecap":"butt | round | square","stroke-linejoin":"miter | miter-clip | round | bevel | arcs","stroke-miterlimit":"<num0+>","stroke-opacity":"<num0-1>","stroke-width":"<len-pct> | <num>","table-layout":"auto | fixed","tab-size":"<num> | <len>","text-align":"<text-align> | justify-all","text-align-last":"<text-align> | auto","text-anchor":"start | middle | end","text-combine-upright":"none | all | [ digits <int2-4>? ]","text-decoration":"<text-decoration-line> || <text-decoration-style> || <color>","text-decoration-color":"<color>","text-decoration-line":"none | [ underline || overline || line-through || blink ]","text-decoration-skip":"none | auto","text-decoration-skip-ink":"none | auto | all","text-decoration-style":"solid | double | dotted | dashed | wavy","text-decoration-thickness":"auto | from-font | <len-pct>","text-emphasis":"<text-emphasis-style> || <color>","text-emphasis-color":"<color>","text-emphasis-style":"none | <string> | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ]","text-emphasis-position":"[ over | under ] && [ right | left ]?","text-indent":"<len-pct> && hanging? && each-line?","text-justify":"auto | none | inter-word | inter-character","text-orientation":"mixed | upright | sideways","text-overflow":"clip | ellipsis","text-rendering":"auto | optimizeSpeed | optimizeLegibility | geometricPrecision","text-shadow":"none | [ <color>? && <len>{2,3} ]#","text-size-adjust":"auto | none | <pct0+>","text-transform":"none | [ capitalize|uppercase|lowercase ] || full-width || full-size-kana","text-underline-offset":"<len-pct> | auto","text-underline-position":"auto | [ under || [ left | right ] ]","text-wrap":"wrap | nowrap | balance | stable | pretty",top:"auto | <len-pct>","touch-action":"auto | none | pan-x | pan-y | pan-left | pan-right | pan-up | pan-down | manipulation",transform:"none | <fn:transform>+","transform-box":"content-box | border-box | fill-box | stroke-box | view-box","transform-origin":"[ left | center | right | <len-pct> ] [ top | center | bottom | <len-pct> ] <len>? | [ left | center | right | top | bottom | <len-pct> ] | [ [ center | left | right ] && [ center | top | bottom ] ] <len>?","transform-style":"flat | preserve-3d",transition:"[ [ none | [ all | <custom-ident> ]# ] || <time> || <timing-function> || <time> || <txbhv> ]#","transition-behavior":"<txbhv>#","transition-delay":"<time>#","transition-duration":"<time>#","transition-property":"none | [ all | <custom-ident> ]#","transition-timing-function":"<timing-function>#",translate:"none | <len-pct> [ <len-pct> <len>? ]?","unicode-range":"<unicode-range>#","unicode-bidi":"normal | embed | isolate | bidi-override | isolate-override | plaintext","user-select":"auto | text | none | contain | all","vertical-align":"auto | use-script | baseline | sub | super | top | text-top | central | middle | bottom | text-bottom | <len-pct>",visibility:"<vis-hid> | collapse","white-space":"normal | pre | nowrap | pre-wrap | break-spaces | pre-line",widows:"<int>",width:"<width>","will-change":"auto | <animateable-feature>#","word-break":"normal | keep-all | break-all | break-word","word-spacing":"<len> | normal","word-wrap":"normal | break-word | anywhere","writing-mode":"horizontal-tb | vertical-rl | vertical-lr | lr-tb | rl-tb | tb-rl | bt-rl | tb-lr | bt-lr | lr-bt | rl-bt | lr | rl | tb",x:"<len-pct> | <num>",y:"<x>","z-index":"<int> | auto",zoom:"<num> | <pct> | normal","-webkit-box-reflect":"[ above | below | right | left ]? <len>? <image>?","-webkit-text-fill-color":"<color>","-webkit-text-stroke":"<border-width> || <color>","-webkit-text-stroke-color":"<color>","-webkit-text-stroke-width":"<border-width>","-webkit-user-modify":"read-only | read-write | write-only"};for(const[e,t]of Object.entries({border:"{1,4}","border-bottom":"","border-left":"","border-right":"","border-top":"","border-block":"{1,2}","border-block-end":"","border-block-start":"","border-inline":"{1,2}","border-inline-end":"","border-inline-start":""}))Properties[e]="<border-shorthand>",Properties[`${e}-color`]="<color>"+t,Properties[`${e}-style`]="<border-style>"+t,Properties[`${e}-width`]="<border-width>"+t;for(const e of["width","height","block-size","inline-size"])Properties[`contain-intrinsic-${e}`]="<contain-intrinsic>";class StringSource{constructor(text){this._break=(this.string=text.replace(/\r\n?|\f/g,"\n")).indexOf("\n"),this.line=1,this.col=1,this.offset=0}eof(){return this.offset>=this.string.length}peek(distance=1){return this.string.charCodeAt(this.offset+distance-1)}mark(){return this._bookmark={o:this.offset,l:this.line,c:this.col,b:this._break}}reset(e=this._bookmark){e&&(({o:this.offset,l:this.line,c:this.col,b:this._break}=e),this._bookmark=null)}readMatch(e,t){const res=(e.lastIndex=this.offset,e.exec(this.string));if(res)return(e=res[0])&&this.read(e.length,e)&&(t?res:e)}readMatchCode(code){if(code===this.string.charCodeAt(this.offset))return this.read()}readMatchStr(e){const len=e.length,{offset:t,string:str}=this;if(!len||str.charCodeAt(t)===e.charCodeAt(0)&&(1===len||str.charCodeAt(t+len-1)===e.charCodeAt(len-1)&&str.substr(t,len)===e))return e&&this.read(len,e)}read(count=1,text){let{offset:e,_break:t,string}=this;if(count<=0||null==text&&!(text=string.substr(e,count)))return"";if(this.offset=e+=count=text.length,e<=t||t<0)this.col+=count;else{let n,{line}=this;do{++line}while((t=string.indexOf("\n",(n=t)+1))>=0&&t<e);this._break=t,this.line=line,this.col=e-n}return text}readCode(){const e=this.string.charCodeAt(this.offset++);if(10===e)this.col=1,this.line++,this._break=this.string.indexOf("\n",this.offset);else{if(!(e>=0))return void this.offset--;this.col++}return e}}const a={__proto__:null,"counter-style":{"additive-symbols":"<pad>#",fallback:"<ident-not-none>",negative:"<prefix>{1,2}",pad:"<int0+> && <prefix>",prefix:"<string> | <image> | <custom-ident>",range:"[ [ <int> | infinite ]{2} ]# | auto","speak-as":"auto | bullets | numbers | words | spell-out | <ident-not-none>",suffix:"<prefix>",symbols:"<prefix>+",system:"cyclic | numeric | alphabetic | symbolic | additive | [fixed <int>?] | [ extends <ident-not-none> ]"},"font-face":pick(Properties,["font-family","font-size","font-variant","font-variation-settings","unicode-range"],{"ascent-override":"[ normal | <pct0+> ]{1,2}","descent-override":"[ normal | <pct0+> ]{1,2}","font-display":"auto | block | swap | fallback | optional","font-stretch":"auto | <font-stretch>{1,2}","font-style":"auto | normal | italic | oblique <angle>{0,2}","font-weight":"auto | [ normal | bold | <num1-1000> ]{1,2}","line-gap-override":"[ normal | <pct0+> ]{1,2}","size-adjust":"<pct0+>",src:"[ url() [ format( <string># ) ]? | local( <family-name> ) ]#"}),"font-palette-values":pick(Properties,["font-family"],{"base-palette":"light | dark | <int0+>","override-colors":"[ <int0+> <color> ]#"}),media:{"<all>":!0,"any-hover":"none | hover","any-pointer":"none | coarse | fine",color:"<int>","color-gamut":"srgb | p3 | rec2020","color-index":"<int>",grid:"<int0-1>",hover:"none | hover",monochrome:"<int>","overflow-block":"none | scroll | paged","overflow-inline":"none | scroll",pointer:"none | coarse | fine",resolution:"<resolution> | infinite",scan:"interlace | progressive",update:"none | slow | fast","device-aspect-ratio":"<ratio>","device-height":"<len>","device-width":"<len>"},page:{"<all>":!0,bleed:"auto | <len>",marks:"none | [ crop || cross ]",size:"<len>{1,2} | auto | [ [ A3 | A4 | A5 | B4 | B5 | JIS-B4 | JIS-B5 | ledger | legal | letter ] || [ portrait | landscape ] ]"},property:{inherits:"true | false","initial-value":1,syntax:"<string>"}},s={__proto__:null,"<absolute-size>":"xx-small | x-small | small | medium | large | x-large | xx-large","<alpha>":"/ <num-pct-none>","<animateable-feature>":"scroll-position | contents | <animateable-feature-name>","<animation-direction>":"normal | reverse | alternate | alternate-reverse","<animation-fill-mode>":"none | forwards | backwards | both","<animation-timeline>":"auto | none | <custom-ident> | scroll( [ [ root | nearest | self ] || <axis> ]? ) | view( [ <axis> || [ [ auto | <len-pct> ]{1,2} ]# ]? )","<attachment>":"scroll | fixed | local","<auto-repeat>":"repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )","<auto-track-list>":"[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat> [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?","<axis>":"block | inline | vertical | horizontal","<baseline-position>":"[ first | last ]? baseline","<basic-shape>":"<fn:basicShape>","<bg-image>":"<image> | none","<bg-layer>":"<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box>{1,2}","<bg-position>":"[ center | [ left | right ] <len-pct>? ] && [ center | [ top | bottom ] <len-pct>? ] | [ left | center | right | <len-pct> ] [ top | center | bottom | <len-pct> ] | [ left | center | right | top | bottom | <len-pct> ]","<bg-size>":"[ <len-pct> | auto ]{1,2} | cover | contain","<blend-mode>":"normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity | plus-darker | plus-lighter","<border-image-slice>":e=>e.many([!0],["<num-pct0+>","<num-pct0+>","<num-pct0+>","<num-pct0+>","fill"].map(e.term)),"<border-radius-round>":"round <border-radius>","<border-shorthand>":"<border-width> || <border-style> || <color>","<border-style>":"none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset","<border-width>":"<len> | thin | medium | thick","<box>":"padding-box | border-box | content-box","<box-fsv>":"fill-box | stroke-box | view-box","<color>":"<named-or-hex-color> | <fn:color>","<compositing-operator>":"add | subtract | intersect | exclude","<contain-intrinsic>":"auto? [ none | <len> ]","<content-distribution>":"space-between | space-around | space-evenly | stretch","<content-list>":"[ <string> | <image> | <attr> | content( text | before | after | first-letter | marker ) | counter() | counters() | leader() | open-quote | close-quote | no-open-quote | no-close-quote | target-counter() | target-counters() | target-text() ]+","<content-position>":"center | start | end | flex-start | flex-end","<coord-box>":"<box> | <box-fsv>","<counter>":"[ <ident-not-none> <int>? ]+ | none","<dasharray>":e=>e.alt([e.term("<len-pct0+>"),e.term("<num0+>")]).braces(1,1/0,"#",e.term(",").braces(0,1,"?")),"<display-box>":"contents | none","<display-inside>":"flow | flow-root | table | flex | grid | ruby","<display-internal>":"table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container","<display-legacy>":"inline-block | inline-table | inline-flex | inline-grid","<display-listitem>":"<display-outside>? && [ flow | flow-root ]? && list-item","<display-outside>":"block | inline | run-in","<explicit-track-list>":"[ <line-names>? <track-size> ]+ <line-names>?","<family-name>":"<string> | <custom-ident>+","<filter-function-list>":"[ <fn:filter> | <url> ]+","<final-bg-layer>":"<color> || <bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <box>{1,2}","<fixed-repeat>":"repeat( [ <int1+> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )","<fixed-size>":"<len-pct> | minmax( <len-pct> , <track-breadth> | <inflexible-breadth> , <len-pct> )","<flex-direction>":"row | row-reverse | column | column-reverse","<flex-wrap>":"nowrap | wrap | wrap-reverse","<font-short-core>":"<font-size> [ / <line-height> ]? <font-family>","<font-short-tweak-no-pct>":"<font-style> || [ normal | small-caps ] || <font-weight> || <font-stretch-named>","<font-stretch-named>":"normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded","<font-variant-alternates>":"stylistic() || historical-forms || styleset() || character-variant() || swash() || ornaments() || annotation()","<font-variant-caps>":"small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps","<font-variant-east-asian>":"[ jis78|jis83|jis90|jis04|simplified|traditional ] || [ full-width | proportional-width ] || ruby","<font-variant-ligatures>":"[ common-ligatures | no-common-ligatures ] || [ discretionary-ligatures | no-discretionary-ligatures ] || [ historical-ligatures | no-historical-ligatures ] || [ contextual | no-contextual ]","<font-variant-numeric>":"[ lining-nums | oldstyle-nums ] || [ proportional-nums | tabular-nums ] || [ diagonal-fractions | stacked-fractions ] || ordinal || slashed-zero","<generic-family>":"serif | sans-serif | cursive | fantasy | monospace | system-ui | emoji | math | fangsong | ui-serif | ui-sans-serif | ui-monospace | ui-rounded","<geometry-box>":"<shape-box> | <box-fsv>","<gradient>":"radial-gradient() | linear-gradient() | conic-gradient() | gradient() | repeating-radial-gradient() | repeating-linear-gradient() | repeating-conic-gradient() | repeating-gradient()","<grid-line>":"auto | [ <int> && <ident-for-grid>? ] | <ident-for-grid> | [ span && [ <int> || <ident-for-grid> ] ]","<image>":"<image-no-set> | image-set( <image-set># )","<image-no-set>":"<url> | <gradient> | -webkit-cross-fade()","<image-set>":"[ <image-no-set> | <string> ] [ <resolution> || type( <string> ) ]","<inflexible-breadth>":"<len-pct> | min-content | max-content | auto","<inset>":"inset( <inset-arg> )","<inset-arg>":"<len-pct>{1,4} <border-radius-round>?","<line-height>":"<num> | <len-pct> | normal","<line-names>":'"[" <ident-for-grid> "]"',"<masking-mode>":"alpha | luminance | match-source","<overflow-position>":"unsafe | safe","<overflow>":"<vis-hid> | clip | scroll | auto | overlay","<overscroll>":"contain | none | auto","<paint>":"none | <color> | <url> [ none | <color> ]? | context-fill | context-stroke","<position>":"[ [ left | right ] <len-pct> ] && [ [ top | bottom ] <len-pct> ] | [ left | center | right | <len-pct> ] [ top | center | bottom | <len-pct> ]? | [ left | center | right ] || [ top | center | bottom ]","<ratio>":"<num0+> [ / <num0+> ]?","<ray>":"ray( <angle> && [closest-side | closest-corner | farthest-side | farthest-corner | sides]? && contain? && [at <position>]? )","<rect>":"rect( <rect-arg> )","<rect-arg>":"[ <len> | auto ]#{4} <border-radius-round>?","<relative-size>":"smaller | larger","<repeat-style>":"repeat-x | repeat-y | [ repeat | space | round | no-repeat ]{1,2}","<rgb-xyz>":"srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020|xyz|xyz-d50|xyz-d65","<self-position>":"center | start | end | self-start | self-end | flex-start | flex-end","<shadow>":"inset? && [ <len>{2,4} && <color>? ]","<shape-box>":"<box> | margin-box","<shape-radius>":"<len-pct0+> | closest-side | farthest-side","<timing-function>":"linear|ease|ease-in|ease-out|ease-in-out|step-start|step-end | cubic-bezier( <num0-1> , <num> , <num0-1> , <num> ) | linear( [ <num> && [ <pct>{1,2} ]? ]# ) | steps( <int> [ , [ jump-start | jump-end | jump-none | jump-both | start | end ] ]? )","<text-align>":"start | end | left | right | center | justify | match-parent","<track-breadth>":"<len-pct> | <flex> | min-content | max-content | auto","<track-list>":"[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?","<track-repeat>":"repeat( [ <int1+> ] , [ <line-names>? <track-size> ]+ <line-names>? )","<track-size>":"<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( <len-pct> )","<txbhv>":"normal | allow-discrete","<url>":"<uri> | src( <string> [ <ident> | <func> ]* )","<vis-hid>":"visible | hidden","<width>":"auto | <width-base>","<width-base>":"<len-pct> | min-content | max-content | -moz-available | -webkit-fill-available | fit-content","<width-max>":"none | <width-base>","<xywh>":"xywh( <xywh-arg> )","<xywh-arg>":"<len-pct>{2} <len-pct0+>{2} <border-radius-round>?"};let l;const Tokens={__proto__:null},EOF=(Tokens[l=0]={name:"EOF"},l),c=(Tokens[++l]={name:"AMP",text:"&"},l),d=(Tokens[++l]={name:"AT"},l),u=(Tokens[++l]={name:"ATTR_EQ",text:["|=","~=","^=","*=","$="]},l),m=(Tokens[++l]={name:"CDCO"},l),h=(Tokens[++l]={name:"CHAR"},l),p=(Tokens[++l]={name:"COLON",text:":"},l),f=(Tokens[++l]={name:"COMBINATOR",text:["~","||"]},l),g=(Tokens[++l]={name:"COMMA",text:","},l),b=(Tokens[++l]={name:"COMMENT"},l),y=(Tokens[++l]={name:"DELIM",text:"!"},l),x=(Tokens[++l]={name:"DOT",text:"."},l),k=(Tokens[++l]={name:"EQUALS",text:"="},l),w=(Tokens[++l]={name:"EQ_CMP",text:[">=","<="]},l),v=(Tokens[++l]={name:"FUNCTION"},l),_=(Tokens[++l]={name:"GT",text:">"},l),S=(Tokens[++l]={name:"HASH",text:"#"},l),M=(Tokens[++l]={name:"IDENT"},l),z=(Tokens[++l]={name:"INVALID"},l),C=(Tokens[++l]={name:"LBRACE",text:"{"},l),T=(Tokens[++l]={name:"LBRACKET",text:"["},l),A=(Tokens[++l]={name:"LPAREN",text:"("},l),E=(Tokens[++l]={name:"MINUS",text:"-"},l),O=(Tokens[++l]={name:"PIPE",text:"|"},l),j=(Tokens[++l]={name:"PLUS",text:"+"},l),B=(Tokens[++l]={name:"RBRACE",text:"}"},l),$=(Tokens[++l]={name:"RBRACKET",text:"]"},l),F=(Tokens[++l]={name:"RPAREN",text:")"},l),L=(Tokens[++l]={name:"SEMICOLON",text:";"},l),P=(Tokens[++l]={name:"STAR",text:"*"},l),STRING=(Tokens[++l]={name:"STRING"},l),q=(Tokens[++l]={name:"URANGE"},l),URI=(Tokens[++l]={name:"URI"},l),N=(Tokens[++l]={name:"UVAR"},l),I=(Tokens[++l]={name:"WS"},l),R=(Tokens[++l]={name:"ANGLE"},l),V=(Tokens[++l]={name:"DIMENSION"},l),D=(Tokens[++l]={name:"FLEX"},l),U=(Tokens[++l]={name:"FREQUENCY"},l),G=(Tokens[++l]={name:"LENGTH"},l),Q=(Tokens[++l]={name:"NUMBER"},l),H=(Tokens[++l]={name:"PCT"},l),X=(Tokens[++l]={name:"RESOLUTION"},l),W=(Tokens[++l]={name:"TIME"},l),Z=[];for(l in Tokens){const token=Tokens[l],{text}=token;if(Tokens[token.name]=l=+l,text)for(const str of"string"==typeof text?[text]:text)1===str.length&&(Z[str.charCodeAt(0)]=l)}const Y=new Bucket("alpha"),K=new Bucket(GlobalKeywords),J={__proto__:null,"<animateable-feature-name>":ee("will-change,auto,scroll-position,contents"),"<angle>":e=>e.isCalc||e.id===R,"<angle-or-0>":e=>e.isCalc||e.is0||e.id===R,"<ascii4>":e=>e.id===STRING&&4===e.length&&!/[^\x20-\x7E]/.test(e.text),"<attr>":e=>e.isAttr,"<custom-ident>":e=>e.id===M&&!K.has(e),"<custom-prop>":e=>"--"===e.type,"<flex>":e=>e.isCalc||"fr"===e.units&&e.number>=0,"<func>":e=>"fn"===e.type,"<hue>":e=>e.isCalc||e.id===Q||e.id===R,"<ident>":e=>e.id===M,"<ident-for-grid>":ee("span,auto"),"<ident-not-none>":e=>e.id===M&&!e.isNone,"<ie-function>":e=>e.ie,"<int>":e=>e.isCalc||e.isInt,"<int0-1>":e=>e.isCalc||e.is0||e.isInt&&1===e.number,"<int0+>":e=>e.isCalc||e.isInt&&e.number>=0,"<int1+>":e=>e.isCalc||e.isInt&&e.number>0,"<int2-4>":e=>e.isCalc||e.isInt&&(e=e.number)>=2&&e<=4,"<len>":e=>e.isCalc||e.is0||e.id===G,"<len0+>":e=>e.isCalc||e.is0||e.id===G&&e.number>=0,"<len-pct>":e=>e.isCalc||e.is0||e.id===G||e.id===H,"<len-pct0+>":e=>e.isCalc||e.is0||e.number>=0&&(e.id===H||e.id===G),"<named-or-hex-color>":e=>"color"===e.type,"<num>":e=>e.isCalc||e.id===Q,"<num0+>":e=>e.isCalc||e.id===Q&&e.number>=0,"<num0-1>":e=>e.isCalc||e.id===Q&&(e=e.number)>=0&&e<=1,"<num1-1000>":e=>e.isCalc||e.id===Q&&(e=e.number)>=1&&e<=1e3,"<num-pct>":e=>e.isCalc||e.id===Q||e.id===H,"<num-pct0+>":e=>e.isCalc||e.number>=0&&(e.id===Q||e.id===H),"<num-pct-none>":e=>e.isCalc||e.isNone||e.id===Q||e.id===H,"<pct>":e=>e.isCalc||e.is0||e.id===H,"<pct0+>":e=>e.isCalc||e.is0||e.number>=0&&e.id===H,"<pct0-100>":e=>e.isCalc||e.is0||e.id===H&&(e=e.number)>=0&&e<=100,"<keyframes-name>":ee("",e=>e.id===STRING),"<resolution>":e=>e.id===X,"<string>":e=>e.id===STRING,"<time>":e=>e.isCalc||e.id===W,"<time0+>":e=>e.isCalc||e.id===W&&e.number>=0,"<unicode-range>":e=>e.id===q,"<uri>":e=>null!=e.uri};for(const type of["hsl","hwb","lab","lch","rgb"]){const letters={};for(let e=0;e<type.length;)letters[type.charCodeAt(e++)]=1;J[`<rel-${type}>`]=e=>e.isNone||(1===e.length?t(letters,e.code):5===e.length&&Y.has(e)),J[`<rel-${type}-num-pct>`]=e=>e.isNone||e.isCalc||e.id===Q||e.id===H||(1===e.length?t(letters,e.code):5===e.length&&Y.has(e))}function ee(str="",alt){const e=new Bucket(GlobalKeywords);return str&&e.addFrom(str.split(",")),t=>t.id===M&&!e.has(t)||alt&&alt(t)}const te=new Map;class PropValueIterator{constructor(value){this.i=0,this.parts=value.parts,this.value=value}get hasNext(){return this.i+1<this.parts.length}next(){if(this.i<this.parts.length)return this.parts[++this.i]}}class ValidationError extends Error{constructor(message,pos){super(),this.col=pos.col,this.line=pos.line,this.offset=pos.offset,this.message=message}}function ne(tok,value,stream,Props){const e=value.parts,t=e[0];let spec,res,n;Props="string"==typeof Props?a[Props]:Props||Properties;let prop=tok.lowText??=tok.text.toLowerCase();do{spec=Props[prop]||Props["<all>"]&&(Props=Properties)[prop]}while(!spec&&!res&&(n=tok.vendorPos)&&(res=prop=prop.slice(n)));if("number"==typeof spec||!spec&&n)return;if(!spec)return prop=Props!==Properties&&Properties[prop]?"Misplaced":"Unknown",new ValidationError(`${prop} property "${tok}".`,tok);if(value.isVar)return;if("ident"===t.type&&K.has(t))return e[1]&&oe(e[1],!0);const r=value.text.trim();let known=te.get(prop);if(known&&known.has(r))return;const expr=new PropValueIterator(value);let i=Matcher.cache[spec]||Matcher.parse(spec);if(res=i.match(expr,t),(!res||expr.hasNext)&&/\battr\(/i.test(r)){res||(expr.i=0,expr.tryAttr=!0,res=i.match(expr));for(let e,t=expr.parts;(e=expr.i)<t.length&&t[e].isAttr;)expr.next()}return expr.hasNext&&(res||expr.i)?oe(expr.parts[expr.i]):!res&&(i=expr.badFunc)?oe(i[0],re(spec,i[1])):res?(known||te.set(prop,known=new Set),void known.add(r)):oe(expr.value,re(spec))}function re(type,e){return e||(e=s[type]||"<"===type[0]&&Properties[type.slice(1,-1)]),e instanceof Matcher?e.toString(0):ie(e||type)}function ie(text){return text.includes("<")?(Matcher.cache[text]||Matcher.parse(text)).toString(0):text}function oe(unit,what){if(what&&!0!==what?!unit.isVar:what="end of value")return new ValidationError(`Expected ${what} but found "${clipString(unit)}".`,unit)}const VTFunctions={color:{__proto__:null,"color-mix":"in [ srgb | srgb-linear | lab | oklab | xyz | xyz-d50 | xyz-d65 | [ hsl | hwb | lch | oklch ] [ [ shorter | longer | increasing | decreasing ] hue ]? ] , [ <color> && <pct0-100>? ]#{2}",color:"from <color> [ <custom-prop> [ <num-pct-none> <custom-ident> ]# | <rgb-xyz> [ <num-pct-none> | r | g | b | x | y | z ]{3} ] [ / <num-pct-none> | r | g | b | x | y | z ]? | [ <rgb-xyz> <num-pct-none>{3} | <custom-prop> <num-pct-none># ] <alpha>?",hsl:"<hue> , <pct>#{2} [ , <num-pct0+> ]? | [ <hue> | none ] <num-pct-none>{2} <alpha>? | from <color> [ <hue> | <rel-hsl> ] <rel-hsl-num-pct>{2} [ / <rel-hsl-num-pct> ]?",hwb:"[ <hue> | none ] <num-pct-none>{2} <alpha>? | from <color> [ <hue> | <rel-hwb> ] <rel-hwb-num-pct>{2} [ / <rel-hwb-num-pct> ]?",lab:"<num-pct-none>{3} <alpha>? | from <color> <rel-lab-num-pct>{3} [ / <rel-lab-num-pct> ]?",lch:"<num-pct-none>{2} [ <hue> | none ] <alpha>? | from <color> <rel-lch-num-pct>{2} [ <hue> | <rel-lch> ] [ / <rel-lch-num-pct> ]?","light-dark":"<color>#{2}",rgb:"[ <num>#{3} | <pct>#{3} ] [ , <num-pct0+> ]? | <num-pct-none>{3} <alpha>? | from <color> <rel-rgb-num-pct>{3} [ / <rel-rgb-num-pct> ]?"},filter:{__proto__:null,blur:"<len>?",brightness:"<num-pct>?",contrast:"<num-pct>?","drop-shadow":"[ <len>{2,3} && <color>? ]?",grayscale:"<num-pct>?","hue-rotate":"<angle-or-0>?",invert:"<num-pct>?",opacity:"<num-pct>?",saturate:"<num-pct>?",sepia:"<num-pct>?"},basicShape:{circle:"<shape-radius> [ at <position> ]?",ellipse:"[ <shape-radius>{2} ]? [ at <position> ]?",inset:"<inset-arg>",path:"[ <fill-rule> , ]? <string>",polygon:"[ <fill-rule> , ]? [ <len-pct> <len-pct> ]#",rect:"<rect-arg>",xywh:"<xywh-arg>"},transform:{__proto__:null,matrix:"<num>#{6}",matrix3d:"<num>#{16}",perspective:"<len0+> | none",rotate:"<angle-or-0> | none",rotate3d:"<num>#{3} , <angle-or-0>",rotateX:"<angle-or-0>",rotateY:"<angle-or-0>",rotateZ:"<angle-or-0>",scale:"[ <num-pct> ]#{1,2} | none",scale3d:"<num-pct>#{3}",scaleX:"<num-pct>",scaleY:"<num-pct>",scaleZ:"<num-pct>",skew:"<angle-or-0> [ , <angle-or-0> ]?",skewX:"<angle-or-0>",skewY:"<angle-or-0>",translate:"<len-pct>#{1,2} | none",translate3d:"<len-pct>#{2} , <len>",translateX:"<len-pct>",translateY:"<len-pct>",translateZ:"<len>"}};{let obj=VTFunctions.color;for(const e of["hsl","rgb"])obj[e+"a"]=obj[e];for(const e of["lab","lch"])obj["ok"+e]=obj[e];obj=VTFunctions.transform;for(const key in obj){const e=key.toLowerCase();e!==key&&Object.defineProperty(obj,e,{value:obj[key],writable:!0})}}const ae=/\s*\|\s*/,se=/\s*&&\s*/y,le=/{\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?}/y,ce=/([-\w]+)\(\s*(\))?/y,de=/\s*\)/y,ue=/\[\s*/y,me=/\s*]/y,he=/\s*\|\|\s*/y,pe=/\s*\|(?!\|)\s*/y,fe=/[-\w]+(?:\s*\|\s*[-\w]+)*(?=\s*\|(?!\|)\s*|\s*]|\s+\)|\s*$)/y,ge=/\s+(?![&|)\]])/y,be=/<[^>\s]+>|"[^"]*"|'[^']*'|[^\s?*+#{}()[\]|&]+/y;class Matcher{constructor(e,toString,arg,t){this.matchFunc=e,null!=arg&&(this.arg=arg),t&&(this.isMeta=t),toString.call?this.toString=toString:this._string=toString}match(expr,e){const{i:t}=expr;if(!e&&!(e=expr.parts[t]))return 0===this.arg.min;const n=this.isMeta,res=!n&&e.isVar||this.matchFunc(expr,e)||!n&&expr.tryAttr&&e.isAttr;return res?!n&&expr.i<expr.parts.length&&++expr.i:expr.i=t,res}toString(){return this._string}static alt(e){let str;for(let t=Matcher.stringArrTest,n=0;n<e.length;)e[n].matchFunc===t?(str=(str?str+" | ":"")+e[n]._string,e.splice(n,1)):n++;return str&&e.unshift(Matcher.term(str)),e[1]?new Matcher(Matcher.altTest,Matcher.altToStr,e,!0):e[0]}static altTest(expr,e){for(let t=this.arg,n=0;n<t.length;n++)if(t[n].match(expr,e))return!0}static altToStr(e){return(e=e>Matcher.ALT?"[ ":"")+this.arg.map(e=>e.toString(Matcher.ALT)).join(" | ")+(e?" ]":"")}braces(min,max,marker,sep){return new Matcher(Matcher.bracesTest,Matcher.bracesToStr,{m:this,min,max,marker,sep:sep&&Matcher.seq([sep.matchFunc?sep:Matcher.term(sep),this])},!0)}static bracesTest(expr,e){let t=0;const{min,max,sep,m:n}=this.arg;for(;t<max&&(t&&sep||n).match(expr,e);)e=void 0,t++;return t>=min&&(t||!0)}static bracesToStr(){const{marker,min,max,m:e}=this.arg;return e.toString(Matcher.MOD)+(marker||"")+(!marker||"#"===marker&&1!==min&&max!==1/0?`{${min}${min===max?"":`,${max===1/0?"":max}`}}`:"")}static funcTest(expr,e){const name=e.name;if(!name)return;let t,n,r;const{arg}=this,{list}=arg;if(list?n=list[name]:(name===(t=arg.name)||(r=e.prefix)&&r+name===t)&&(n=arg.body),!n)return null!=n;if(t=e.expr){if(t.isVar)return!0;r=new PropValueIterator(t)}return n.matchFunc||(n=list[name]=n.call?n(Matcher):Matcher.cache[n]||Matcher.parse(n)),t?n.match(r)&&r.i>=r.parts.length||!(expr.badFunc=[t,n]):0===n.arg.min}static funcToStr(e){const{name,body,list}=this.arg;return name?`${name}(${body?` ${body} `:""})`:(e=e>Matcher.ALT?"[ ":"")+Object.keys(list).join("() | ")+(e?"() ]":"()")}static many(req,e){if(!e[1])return e[0];const res=new Matcher(Matcher.manyTest,Matcher.manyToStr,e,!0);return res.req=!0===req?Array(e.length).fill(!0):req??e.map(e=>!e.arg||"?"!==e.arg.marker),res}static manyTest(expr){const state=[];if(state.expr=expr,state.max=0,this.manyTestRun(state,0)||this.manyTestRun(state,0,!0),!this.req)return state.max>0;for(let e=0;e<this.req.length;e++)if(this.req[e]&&!state[e])return!1;return!0}manyTestRun(state,count,retry){for(let e,t,n=0,{expr}=state,r=this.arg;n<r.length;n++)if(!state[n]&&((e=expr.i)+1>expr.parts.length||(t=r[n].match(expr))&&(t>1||1===t||0!==r[n].arg.min))){if(state[n]=!0,this.manyTestRun(state,count+(!this.req||this.req[n]?1:0),retry))return!0;state[n]=!1,expr.i=e}return retry?count===state.max:(state.max=Math.max(state.max,count),count===this.arg.length)}static manyToStr(e){const{req}=this,t=Matcher[req?"ANDAND":"OROR"],n=this.arg.map((e,n)=>!req||req[n]?e.toString(t):e.toString(Matcher.MOD).replace(/[^?]$/,"$&?")).join(req?" && ":" || ");return e>t?`[ ${n} ]`:n}static parse(str){const source=new StringSource(str),res=Matcher.parseAlt(source);if(!source.eof()){const{offset:e,string}=source;throw new Error(`Internal grammar error. Unexpected "${clipString(string.slice(e,31),30)}" at position ${e} in "${string}".`)}return Matcher.cache[str]=res,res}static parseAlt(src){const e=[];do{const t=src.readMatch(fe);if(t)e.push(Matcher.term(t));else{const t=[];do{const e=[];do{const seq=[];do{seq.push(Matcher.parseTerm(src))}while(src.readMatch(ge));e.push(Matcher.seq(seq))}while(src.readMatch(se));t.push(Matcher.many(null,e))}while(src.readMatch(he));e.push(Matcher.many(!1,t))}}while(src.readMatch(pe));return Matcher.alt(e)}static parseTerm(src){let e,t;if(src.readMatch(ue)?(e=Matcher.parseAlt(src),src.readMatch(me)||Matcher.parsingFailed(src,me)):(t=src.readMatch(ce,!0))?(e=new Matcher(Matcher.funcTest,Matcher.funcToStr,{name:t[1].toLowerCase(),body:!t[2]&&Matcher.parseAlt(src)}),t[2]||src.readMatch(de)||Matcher.parsingFailed(src,de)):e=Matcher.term(src.readMatch(be)||Matcher.parsingFailed(src,be)),t=src.peek(),123===t||35===t&&123===src.peek(2)){const hash=35===t?src.read():"",[,n,comma,r=(comma?1/0:n)]=src.readMatch(le,!0)||Matcher.parsingFailed(src,le);return e.braces(+n,+r,hash,hash&&",")}switch(t){case 63:return e.braces(0,1,src.read());case 42:return e.braces(0,1/0,src.read());case 43:return e.braces(1,1/0,src.read());case 35:return e.braces(1,1/0,src.read(),",")}return e}static parsingFailed(src,e){throw new Error(`Internal grammar error. Expected ${e} at ${src.offset} in ${src.string}`)}static seq(e){return e[1]?new Matcher(Matcher.seqTest,Matcher.seqToStr,e,!0):e[0]}static seqTest(expr,e){let t,n,r,res;for(n=0;r=this.arg[n++];e=void 0){if(!(res=r.match(expr,e)))return;!t&&(0!==r.arg.min||1===res||res>1)&&(t=!0)}return!0}static seqToStr(e){return(e=e>Matcher.SEQ?"[ ":"")+this.arg.map(e=>e.toString(Matcher.SEQ)).join(" ")+(e?" ]":"")}static simpleTest(expr,e){return!!this.arg(e)}static stringArrTest(expr,e){return this.arg.has(e)||e.vendorCode&&(expr=this.arg[100*e.vendorCode+e.length-e.vendorPos])&&(e=e.text.slice(e.vendorPos).toLowerCase())&&("string"==typeof expr?expr===e:expr.includes(e))}static stringArrToStr(e){return(e=e>Matcher.ALT&&this._string.includes(" ")?"[ ":"")+this._string+(e?" ]":"")}static term(str){const e=str;let t=Matcher.cache[str=str.toLowerCase()];return t||("<"!==str[0]?(t=new Matcher(Matcher.stringArrTest,Matcher.stringArrToStr,new Bucket(str.split(ae))),t._string=str):str.startsWith("<fn:")?t=new Matcher(Matcher.funcTest,Matcher.funcToStr,{list:VTFunctions[e.slice(4,-1)]}):(t=J[str])?t=new Matcher(Matcher.simpleTest,str,t):(t=s[str]||Properties[str.slice(1,-1)],t=t.matchFunc?t:t.call?t(Matcher):Matcher.cache[t]||Matcher.parse(t),"<url>"===str&&(t._string=str,delete t.toString)),Matcher.cache[str]=t,t)}}Matcher.cache={__proto__:null},Matcher.MOD=5,Matcher.SEQ=4,Matcher.ANDAND=3,Matcher.OROR=2,Matcher.ALT=1;class Token{constructor(e,col,line,offset,input,code){this.id=e,this.col=col,this.line=line,this.offset=offset,this.offset2=offset+1,this.type="",this.code=i(code),this._input=input}static from(tok){return assign(Object.create(this.prototype),tok)}get length(){return t(this,"text")?this.text.length:this.offset2-this.offset}get string(){const str=e.value=parseString(this.text);return define(this,"string",e),str}set string(val){e.value=val,define(this,"string",e)}get text(){return this._input.slice(this.offset,this.offset2)}set text(val){e.value=val,define(this,"text",e)}valueOf(){return this.text}toString(){return this.text}}class TokenFunc extends Token{static from(tok,expr,end){if((tok=super.from(tok)).type="fn",t(tok,"text")&&(tok.offsetBody=tok.offset2),end&&(tok.offset2=end.offset2),expr){tok.expr=expr;let e=tok.name;"calc"===e||"clamp"===e||"min"===e||"max"===e||"sin"===e||"cos"===e||"tan"===e||"asin"===e||"acos"===e||"atan"===e||"atan2"===e?tok.isCalc=!0:"var"===e||"env"===e?tok.isVar=!0:"attr"!==e||!(e=expr.parts[0])||e.id!==M&&e.id!==N||(tok.isAttr=!0)}return tok}toString(){const e=this._input;return t(this,"text")?this.text+e.slice(this.offsetBody+1,this.offset2):e.slice(this.offset,this.offset2)}}class TokenValue extends Token{static from(parts,tok=parts[0]){return(tok=super.from(tok)).parts=parts,tok}static empty(tok){return(tok=super.from(tok)).parts=[],tok.id=I,tok.offset2=tok.offset,delete tok.text,tok}get text(){return this._input.slice(this.offset,(this.parts[this.parts.length-1]||this).offset2)}set text(val){e.value=val,define(this,"text",e)}}const ye={__proto__:null},xe={__proto__:null};for(const[e,units]of[[R,"deg,grad,rad,turn"],[D,"fr"],[U,"hz,khz"],[G,"cap,ch,em,ex,ic,lh,rcap,rch,rem,rex,ric,rlh,cm,mm,in,pc,pt,px,q,cqw,cqh,cqi,cqb,cqmin,cqmax,vb,vi,vh,vw,vmin,vmaxdvb,dvi,dvh,dvw,dvmin,dvmaxlvb,lvi,lvh,lvw,lvmin,lvmaxsvb,svi,svh,svw,svmin,svmax"],[X,"dpcm,dpi,dppx,x"],[W,"ms,s"]]){const type=Tokens[e].name.toLowerCase();for(const e of units.split(","))ye[e]=type;xe[type]=e}const ke={attrEq:[u,k],attrEqEnd:[u,k,$],attrStart:[O,M,P],attrNameEnd:[$,N,I],colonLParen:[p,A],combinator:[j,_,f],condition:[v,M,A],declEnd:[L,B],docFunc:[v,M,URI],identStar:[M,P],identString:[M,STRING],mediaList:[M,A],mediaValue:[M,Q,V,G],propCustomEnd:[y,L,B,$,F,z],propValEnd:[y,L,B],propValEndParen:[y,L,B,F],pseudo:[v,M],selectorStart:[c,O,M,P,S,x,T,p],stringUri:[STRING,URI]},we={must:!0},ve={must:!0,reuse:!0},_e=[H,...ke.mediaValue,...ke.identString].reduce((res,e)=>(res[e]=!0)&&res,[]),Se=/(\*)\[\[[-\w]+]]\*\/|\*(?:[^*]+|\*(?!\/))*(?:\*\/|$)/y,Me=/\d+/y,ze=/\s*['"]?/y,Ce=/(?:[-_\da-zA-Z\u00A0-\uFFFF]+|\\(?:(?:[0-9a-fA-F]{1,6}|.)[\t ]?|$))+/y,Te=/(even|odd)|(?:([-+]?\d*n)(?:\s*([-+])(\s*\d+)?)?|[-+]?\d+)((?=\s+of\s+|\s*\)))?/iy,Ae=/\d*(?:(\.)\d*)?(?:(e)[+-]?\d+)?/iy,Ee=/\d+(?:(e)[+-]?\d+)?/iy,Oe=/(?:(\.)\d+|\d+(?:(\.)\d*)?)(?:(e)[+-]?\d+)?/iy,je=/[-+]/y,Be=/\s+/y,$e=/(?=\s|\/\*|\))/y,Fe=/(?:\s+|\/\*(?:[^*]+|\*(?!\/))*(?:\*\/|$))+/y,Le=/\s*\)/y,Pe=/(?:[^\n\\"]+|\\(?:([0-9a-fA-F]{1,6}|.)[\t ]?|\n|$))*/y,qe=/(?:[^\n\\']+|\\(?:([0-9a-fA-F]{1,6}|.)[\t ]?|\n|$))*/y,Ne=/\\(?:([0-9a-fA-F]{1,6})|(.))[\t ]?/g,Ie=/\+([\da-f]{1,6})(\?{1,6}|-([\da-f]{1,6}))?/iy,Re=/(?:[-!#$%&*-[\]-~\u00A0-\uFFFF]+|\\(?:(?:[0-9a-fA-F]{1,6}|.)[\t ]?|$))+/y,[Ve,De]=((exclude=String.raw`'"{}()[\]\\/`,e="]|/(?!\\*))",t=String.raw`(?:"[^"\n\\]*"|[^${exclude}${e}*`,common=`(?:${[n.source,`"${Pe.source}("|\n|$)`,`'${qe.source}('|\n|$)`,String.raw`\(${t}\)|\[${t}]`,String.raw`/\*(?:[^*]+|\*(?!\/))*(?:\*\/|$)`].join("|")}|`)=>[`{${t}}|[^`,"[^;"].map(str=>RegExp(common+str+exclude+e+"+","y")))(),Ue=(e,prev)=>e>=97&&e<=122||e>=65&&e<=90||45===e||92===e||95===e||e>=160||e>=48&&e<=57||92===prev&&10!==e&&null!=e,Ge=(e,t)=>e>=97&&e<=122||e>=65&&e<=90||95===e||e>=160||(45===e?45!==t&&Ge(t):92===e&&Ue(t,e)),isSpace=e=>9===e&&10===e||32===e,Qe=(e,code,char)=>char||String.fromCodePoint(parseInt(code,16));ke.nestSel=[...ke.selectorStart,...ke.combinator],ke.nestSelBlock=[...ke.nestSel,C];for(const e in ke)ke[e]=ke[e].reduce((res,e)=>(_e[e]&&(res.isUvp=1),res[e]=!0,res),[]);class TokenStream{constructor(input){this.source=new StringSource(input?`${input}`:""),this._amp=0,this._max=4,this._pair=0,this._resetBuf(),define(this,"grab",{writable:!0,value:this.get.bind(this,0,0)})}_resetBuf(){this.token=null,this._buf=[],this._cur=0,this._cycle=0}get(e,t=!0){let tok,n,slot,{_buf:buf,_cur:r,_max:i}=this;do{if(slot=(r+this._cycle)%i,r>=buf.length){buf.length<i?r++:this._cycle=(this._cycle+1)%i,n=(tok=buf[slot]=this._getToken(e,t)).id;break}++r,n=(tok=buf[slot]).id}while(n===b||!t&&n===I||!e&&n===N);return n===c&&this._amp++,this._cur=r,this.token=tok,tok}match(what,text,tok=this.get(),opts){return("object"==typeof what?!t(what,tok.id):what&&tok.id!==what)||text&&!text.has(tok)?opts!==N?(this.unget(),opts&&opts.must&&this._failure(text||what,tok),!1):void 0:tok}matchOrDie(what,text,tok){return this.match(what,text,tok,we)}matchSmart(what,opts={}){let tok;const text=opts.has?opts:(tok=opts.reuse,opts.text),e="object"==typeof what?I in what:what===I;let n=!e&&!text&&("object"==typeof what?what.isUvp:t(_e,what));return tok=tok&&(null!=tok.id?tok:this.token)||this.get(n,e),n=n&&tok.isVar,this.match(what,text,tok,n?N:opts)||n&&(this.match(what,text,this.grab())||tok)||!1}peekCached(){return this._cur<this._buf.length&&this._buf[(this._cur+this._cycle)%this._max]}unget(){if(!this._cur)throw new Error("Too much lookahead.");this.token?.id===c&&this._amp--,this.token=this._buf[(--this._cur-1+this._cycle+this._max)%this._max]}_failure(goal="",tok=this.token,e=!0){if(goal="string"==typeof goal?goal:goal instanceof Bucket?`"${goal.join('", "')}"`:(+goal?[goal]:goal).reduce((res,e,t)=>res+(res?", ":"")+((e=Tokens[!0===e?t:e]).text?`"${e.text}"`:e.name),""),goal=new ParseError(`${goal=goal?`Expected ${goal} but found`:"Unexpected"} "${clipString(tok)}".`,tok),e)throw goal;return goal}_getToken(t,n){const src=this.source;let r,i,o,text,col,line,offset;for(;({col,line,offset}=src),r=src.readCode(),null!=r;)if(i=src.peek(),9===r||10===r||32===r){if(isSpace(i)&&src.readMatch(Be),n){o=I;break}}else{if(47!==r||42!==i)break;if(r=src.readMatch(Se,!0),t&&r[1]){o=N;break}}const tok=new Token(o||h,col,line,offset,src.string,r);return o?o===N&&(tok.isVar=!0):r>=48&&r<=57?(o=i>=48&&i<=57||46===i||(69===i||101===i)&&43===(o=src.peek(2))||45===o||o>=48&&o<=57,text=this._number(src,tok,r,i,o,Ae)):(45===r||43===r&&(tok.id=j)||46===r&&(tok.id=x))&&(i>=48&&i<=57||46===i&&46!==r&&(o=src.peek(2))>=48&&o<=57)?text=this._number(src,tok,r,i,1,46===r?Ee:Oe):45===r?45===i?Ue(o||(o=src.peek(2)),i)?(text=this._ident(src,tok,r,i,1,o,1),tok.type="--"):62===o?(src.read(2,"->"),tok.id=m):tok.id=E:Ge(i,92===i&&(o||(o=src.peek(2))))?text=this._ident(src,tok,r,i,1,o):tok.id=E:85!==r&&117!==r||43!==i?Ge(r,i)?text=this._ident(src,tok,r,i):(o=61===i?(36===r||42===r||94===r||124===r||126===r)&&u||(60===r||62===r)&&w:124===r&&124===i&&f)?(tok.id=o,src.readCode()):35===r?Ue(i,r)&&(text=this._ident(src,tok,r,i,1),tok.id=S):42===r?(tok.id=P,Ge(i)&&(tok.hack="*")):(o=Z[r])?tok.id=o:34===r||39===r?(src.readMatch(34===r?Pe:qe),src.readMatchCode(r)?(tok.id=STRING,tok.type="string"):tok.id=z):92===r?null==i?text="�":10===i&&(tok.id=I,text=src.readMatch(Be)):64===r?Ge(i,o=(45===i||92===i)&&src.peek(2))&&(o=this._ident(src,null,src.readCode(),o||src.peek()),r=o.name,text=o.esc&&`@${r}`,r=45===r.charCodeAt(0)&&(o=r.indexOf("-",1))>1?r.slice(o+1):r,tok.atName=r.toLowerCase(),tok.id=d):60===r?33===i&&src.readMatchStr("!--")&&(tok.id=m):null==r&&(tok.id=EOF):(o=src.readMatch(Ie,!0),o&&parseInt(o[1],16)<=1114111&&(o[3]?parseInt(o[3],16)<=1114111:!o[2]||(o[1]+o[2]).length<=6)?tok.id=q:(o&&(src.col-=o=o[0].length,src.offset-=o),tok.id=M,tok.type="ident")),(o=src.offset)!==offset+1&&(tok.offset2=o),text&&(e.value=text,define(tok,"text",e)),tok}_ident(src,tok,e,t,n=Ue(t,e),r=n&&this.source.peek(2),o=r&&(Ue(r,t)||92===e&&isSpace(r))){const first=92===e?(o=src.offset--,src.col--,""):String.fromCharCode(e),str=o?src.readMatch(Ce):n?src.read():"",esc=92===e||92===t||n&&92===r||str.length>2&&str.includes("\\"),name=esc?(first+str).replace(Ne,Qe):first+str;if(!tok)return{esc,name};92===e&&(tok.code=i(name.charCodeAt(0)));const a=45===e&&45!==t&&name.indexOf("-",2)+1,next=o||esc&&isSpace(r)?src.peek():n?r:t;let s=esc?name:null;return 40===next?(src.read(),"url"!==(r=name.toLowerCase())&&"url-prefix"!==r&&"domain"!==r||null==(t=this._uriValue(src))?(tok.id=v,tok.type="fn"):(tok.id=URI,tok.type="uri",tok.uri=t),tok.name=a?r.slice(a):r,a&&(tok.prefix=r.slice(0,a))):58===next&&"progid"===name?(s=name+src.readMatch(/.*?\(/y),tok.id=v,tok.name=s.slice(0,-1).toLowerCase(),tok.type="fn",tok.ie=!0):(tok.id=M,(45===e||(t=name.length)<3||t>20)&&(tok.type="ident")),a&&(tok.vendorCode=i(name.charCodeAt(a)),tok.vendorPos=a),s}_number(src,tok,e,t,n,r){const i=String.fromCharCode(e)+(n?(t=src.readMatch(r,!0))[0]:""),o=46===e||n&&(t[1]||t[2]||t[3]);let a,units;return 37===(e=n?src.peek():t)?(tok.id=H,tok.type=units=src.read(1,"%")):Ge(e,t=(45===e||92===e)&&src.peek(2))?(units=(e=this._ident(src,null,src.readCode(),t||src.peek())).name,a=e.esc&&i+units,e=ye[units=units.toLowerCase()]||"",tok.id=e&&xe[e]||V,tok.type=e):(tok.id=Q,tok.type="number"),tok.units=units||"",tok.number=e=+i,tok.is0=t=!units&&!e,tok.isInt=t||!units&&!o,a}_spaceCmt(src){const e=src.peek();return(47===e||isSpace(e))&&src.readMatch(Fe)||""}_uriValue(src){let e=src.peek();if(src.mark(),e=34===e||39===e?src.read():isSpace(e)&&src.readMatch(ze).trim(),e?(e+=src.readMatch('"'===e?Pe:qe),e=src.readMatchStr(e[0])&&parseString(e+e[0])):(e=src.readMatch(Re))&&e.includes("\\")&&(e=e.replace(Ne,Qe)),null!=e&&(src.readMatchCode(41)||src.readMatch(Le)))return e;src.reset()}readNthChild(){const src=this.source,e=(this._spaceCmt(src),src.readMatch(Te,!0));if(!e)return;let t,n,r,[,i,nth,sign,int,next]=e;if(i)t=i;else if(t=nth){if(sign||!next&&(r=this._spaceCmt(src),sign=src.readMatch(je))){if(!(int||(src.mark(),this._spaceCmt(src),int=src.readMatch(Me))))return src.reset();n=sign+int.trim()}}else n=e[0];return!t&&!n||!r&&null==src.readMatch($e)?void 0:[t||"",n||""]}skipDeclBlock(e){let t=this.peekCached();if(!t||t.id!==B&&t.id!==L){for(let src=this.source,stack=[],end=e?125:-1;t=src.peek();){if(t===end||end<0&&(59===t||125===t)){if(end=stack.pop(),!end||end<0&&125===t){(end||59===t)&&src.readCode();break}}else{if(125===t||41===t||93===t)break;(t=123===t?125:40===t?41:91===t&&93)&&(stack.push(end),end=t)}src.readCode(),src.readMatch(end>0?Ve:De)}this._resetBuf()}}}const He={__proto__:null,charset(stream,start){const charset=stream.matchSmart(STRING,we);stream.matchSmart(L,we),this.fire({type:"charset",charset},start)},container(stream,start){const tok=stream.matchSmart(M),name=o.not.has(tok)?stream.unget():tok;this._condition(stream,void 0,this._containerCondition),this._block(stream,start,{event:["container",{name}]})},document(stream,start){this._stack.length&&this.alarm(2,"Nested @document produces broken code",start);const functions=[];do{const tok=stream.matchSmart(ke.docFunc),uri=null!=tok.uri,e=uri?TokenFunc.from(tok):tok.name&&this._function(stream,tok);e&&(uri||"regexp"===e.name)?functions.push(e):this.alarm(1,"Unknown document function",e)}while(stream.matchSmart(g));const brace=stream.matchSmart(C,we);this.fire({type:"startdocument",brace,functions,start},start),this.options.topDocOnly?(stream.skipDeclBlock(!0),stream.matchSmart(B,we)):this._block(stream,start,{brace}),this.fire({type:"enddocument",start,functions})},"font-face"(stream,start){this._block(stream,start,{decl:!0,event:["fontface",{}],scoped:!0})},"font-palette-values"(stream,start){this._block(stream,start,{decl:!0,event:["fontpalettevalues",{id:stream.matchSmart(M,we)}],scoped:!0})},import(stream,start){let layer,name,tok;const uri=(tok=stream.matchSmart(ke.stringUri,we)).uri||tok.string;("layer"===(name=(tok=stream.grab()).name)||!name&&o.layer.has(tok))&&(layer=name?this._layerName(stream):"",name&&stream.matchSmart(F,we),name=(tok=stream.grab()).name),"supports"===name&&(this._conditionInParens(stream,{id:A}),tok=null);const media=this._mediaQueryList(stream,tok);stream.matchSmart(L,we),this.fire({type:"import",layer,media,uri},start)},keyframes(stream,start){const prefix=start.vendorPos?start.text.slice(0,start.vendorPos):"",name=stream.matchSmart(ke.identString,we);let tok,e;for(stream.matchSmart(C,we),this.fire({type:"startkeyframes",name,prefix},start);;){const keys=[];do{if(e=(tok=stream.grab()).id,e===H||e===M&&o.fromTo.has(tok))keys.push(tok);else{if(!keys[0])break;stream._failure('percentage%, "from", "to"',tok)}}while((e=(tok=stream.grab()).id)===g);if(!keys[0])break;this._block(stream,keys[0],{decl:!0,brace:e===C?tok:stream.unget(),event:["keyframerule",{keys}]})}e!==B&&stream.matchSmart(B,we),this.fire({type:"endkeyframes",name,prefix})},layer(stream,start){const ids=[];let tok;do{if((tok=stream.grab()).id===M&&(ids.push(this._layerName(stream,tok)),tok=stream.grab()),tok.id===C){if(this.options.globalsOnly)throw this.stream.token=start,We;return ids[1]&&this.alarm(1,"@layer block cannot have multiple ids",start),void this._block(stream,start,{brace:tok,event:["layer",{id:ids[0]}]})}}while(tok.id===g);stream.matchSmart(L,{must:1,reuse:tok}),this.fire({type:"layer",ids},start)},media(stream,start){const media=this._mediaQueryList(stream);this._block(stream,start,{event:["media",{media}]})},namespace(stream,start){const prefix=stream.matchSmart(M).text,tok=stream.matchSmart(ke.stringUri,we),uri=tok.uri||tok.string;stream.matchSmart(L,we),this.fire({type:"namespace",prefix,uri},start)},page(stream,start){const tok=stream.matchSmart(M);o.auto.has(tok)&&stream._failure();const e=tok.text,pseudo=stream.match(p)&&stream.matchOrDie(M).text;this._block(stream,start,{decl:!0,event:["page",{id:e,pseudo}],margins:!0,scoped:!0})},property(stream,start){const name=stream.matchSmart(M,we);this._block(stream,start,{decl:!0,event:["property",{name}],scoped:!0})},scope(stream,start){const mark=stream.source.mark();let e,t,tok=stream.grab();try{tok.id===A&&(e=this._selectorsGroup(stream,void 0,!1,!0),stream.matchSmart(F,ve),tok=stream.grab()),e&&o.to.has(tok)&&(stream.matchSmart(A,we),t=this._selectorsGroup(stream,void 0,!1,!0),stream.matchSmart(F,ve),tok=stream.grab()),tok=stream.matchSmart(C,ve)}catch(e){return stream.source.reset(mark),stream._resetBuf(),void this._declarationFailed(stream,e)}this._inScope++,this._block(stream,start,{event:["scope",{start:e,end:t}],brace:tok}),this._inScope--},supports(stream,start){this._condition(stream,void 0,this._supportsCondition),this._block(stream,start,{event:["supports"]})}},Xe=pick(He,["document"]),We=pick(He,["charset","import","layer","namespace"]),data=new Map,stack=[];let generation=null,Ze=null,parser=null,stream=null;function init(e){if(parser=e,!parser)return data.clear(),stack.length=0,void(Ze=performance.now());stream=parser.stream,generation=performance.now(),trim()}function Ye(event){if(parser)for(let e=stack.length;--e>=0;){const{offset,offset2:t,events}=stack[e];if(event.offset>=offset&&(!t||event.offset<=t))return void events.push(event)}}function Ke(token=getToken()){if(!token||!stream)return;const src=stream.source,{string}=src,start=token.offset,key=string.slice(start,string.indexOf("{",start)+1);let block=data.get(key);return block&&(block=nt(block,string,start,key))?(rt(block,start,token.line,token.col,string),src.offset=block.offset2,src.line=block.line2,src.col=block.col2,stream._resetBuf(),!0):void 0}function Je(start=getToken()){if(start&&stream)return stack.push({text:"",events:[],generation,line:start.line,col:start.col,offset:start.offset,line2:void 0,col2:void 0,offset2:void 0}),stack.length}function et(end=getToken()){if(!parser||!stream)return;const block=stack.pop();block.line2=end.line,block.col2=end.col+end.offset2-end.offset,block.offset2=end.offset2;const{string}=stream.source,start=block.offset,key=string.slice(start,string.indexOf("{",start)+1);block.text=string.slice(start,block.offset2);let blocks=data.get(key);blocks||data.set(key,blocks=[]),blocks.push(block)}function tt(pos){pos===stack.length&&stack.length--}function trim(immediately){if(!immediately)return clearTimeout(trim.timer),void(trim.timer=setTimeout(trim,1e4,!0));const e=performance.now()-6e5;for(const[key,blocks]of data.entries()){const t=blocks.length>>1,n=blocks.sort((e,t)=>e.time-t.time).filter((n,r)=>(n=n.generation)>e||n!==generation&&r<t);n.length?n.length!==blocks.length&&data.set(key,n):data.delete(key)}}function nt(blocks,input,start,key){const e=Math.max(key.length-1),check1=input[start],check2=input[start+e],t=performance.now()-Ze;return(blocks=blocks.filter(({text,offset,offset2:t})=>text[0]===check1&&text[e]===check2&&text[text.length-1]===input[start+text.length-1]&&text.startsWith(key)&&text===input.substr(start,t-offset)).sort((e,n)=>(e.generation-n.generation)/t+(Math.abs(e.offset-start)-Math.abs(n.offset-start))/input.length)).find(e=>e.generation!==generation)||deepCopy(blocks[0])}function rt(block,cursor,line,col,input){const e=line-block.line,t=1===block.col&&1===col?0:col-block.col,n=cursor-block.offset,r=e||t||n,shifted=new Set;for(const i of block.events)r&&it(i,shifted,block.line,e,t,n,input),parser.fire(i,!1);block.generation=generation,block.col2+=block.line2===block.line?t:0,block.line2+=e,block.offset2=cursor+block.text.length,block.line+=e,block.col+=t,block.offset=cursor}function it(obj,seen,line,lines,e,t,input){if(!seen.has(obj))if(seen.add(obj),Array.isArray(obj))for(let n,r=0;r<obj.length;r++)(n=obj[r])&&"object"==typeof n&&it(n,seen,line,lines,e,t,input);else for(let n,r,i=0,keys=Object.keys(obj);i<keys.length;i++)n=keys[i],("col"===n?(e&&obj.line===line&&(obj.col+=e),0):"col2"===n?(e&&obj.line2===line&&(obj.col2+=e),0):"line"===n?(lines&&(obj.line+=lines),0):"line2"===n?(lines&&(obj.line2+=lines),0):"offset"===n?(t&&(obj.offset+=t),0):"offset2"===n?(t&&(obj.offset2+=t),0):"_input"===n?(obj._input=input,0):"target"!==n&&(r=obj[n])&&"object"==typeof r)&&it(r,seen,line,lines,e,t,input)}function getToken(){return parser&&(stream.peekCached()||stream.token)}function deepCopy(obj){if(!obj||"object"!=typeof obj)return obj;if(Array.isArray(obj))return obj.map(deepCopy);const copy=Object.create(Object.getPrototypeOf(obj));for(let e,t,arr=Object.keys(obj),n=0;n<arr.length;n++)t=obj[e=arr[n]],copy[e]=t&&"object"==typeof t?deepCopy(t):t;return copy}var parserCache={__proto__:null,addEvent:Ye,cancelBlock:tt,endBlock:et,feedback:function({messages}){messages=new Set(messages);for(const blocks of data.values())for(const block of blocks){if(!block.events.length)continue;if(block.generation!==generation)continue;const{line:e,col:t,line2:n,col2:r}=block;let isClean=!0;for(const msg of messages){const{line,col}=msg;(e===n&&line===e&&t<=col&&col<=r||line===e&&col>=t||line===n&&col<=r||line>e&&line<n)&&(messages.delete(msg),isClean=!1)}isClean&&(block.events.length=0)}},findBlock:Ke,init,startBlock:Je};const ot=(obj={"&":(stream,tok)=>assign(tok,{type:"amp",args:[]}),"#":(stream,tok)=>assign(tok,{type:"id",args:[]}),"."(stream,tok){const e=stream.matchOrDie(M);return t(e,"text")&&(tok.text="."+e.text),tok.offset2=e.offset2,tok.type="class",tok},"["(stream,start){const e=stream.matchSmart(ke.attrStart,we);let n,r,name,i,val,mod,end;return stream._pair=$,e.id===O?r=e:e.id===P?(r=e,r.offset2=stream.matchOrDie(O).offset2,r.length>2&&(r.text="*|")):(n=stream.get()).id===O?(r=e,r.offset2++):t(ke.attrEq,n.id)?(name=e,i=n):t(ke.attrNameEnd,n.id)?(name=e,end=n.id===$&&n):stream._failure('"]"',n),name=name||stream.matchOrDie(M),i||end||((n=stream.matchSmart(ke.attrEqEnd,we)).id===$?end=n:i=n),i&&(val=stream.matchSmart(ke.identString,we),(n=stream.grab()).id===$?end=n:o.attrIS.has(n)?mod=n:stream._failure(o.attrIS,n)),start.args=[r||"",name,i||"",val||"",mod||""],start.type="attribute",start.offset2=(end||stream.matchSmart($,we)).offset2,stream._pair=0,start},":"(stream,tok){const e=stream.match(p)?"::":":";let expr,t,n,r;if((tok=stream.matchOrDie(ke.pseudo)).col-=e.length,tok.offset-=e.length,tok.type="pseudo",t=tok.name){if(stream._pair=F,"nth-child"===t||"nth-last-child"===t){expr=stream.readNthChild();const e=stream.get(),r=e.id===I?stream.grab():e;expr&&o.of.has(r)?t="not":r.id===F?n=!0:stream._failure("",e)}"not"===t||(r="is"===t||"where"===t||"any"===t)||"has"===t?(n=this._selectorsGroup(stream,void 0,"has"===t,r),n||stream._failure("a selector"),expr?expr.push(...n):expr=n,stream.matchSmart(F,ve)):n||(expr=this._expr(stream,F,!0)),tok=TokenFunc.from(tok,expr,stream.token),stream._pair=0}return tok.args=expr&&expr.parts||[],tok}},Object.keys(obj).reduce((res,e)=>(res[Z[e.charCodeAt(0)]]=obj[e],res),[]));var obj;const Parens=[];Parens[C]=B,Parens[T]=$,Parens[A]=F;const at=sel=>t(ke.combinator,sel.parts[0].id),st=function(){return this.hack+this.text};const parserlib={css:{Combinators,GlobalKeywords,NamedColors,Parser:class extends EventDispatcher{static AT=He;constructor(options){super(),this.options=options||{},this.stream=null,this._inScope=0,this._inStyle=0,this._stack=[],this._events=null}alarm(level,msg,token){this.fire({type:level>=2?"error":1===level?"warning":"info",message:msg,recoverable:level<=2},token)}fire(e,tok=(null!=e.offset?e:this.stream.token)){this._events?this._events.push(arguments):("string"==typeof e&&(e={type:e}),tok&&null==e.offset&&(e.offset=tok.offset,e.line=tok.line,e.col=tok.col),!1!==tok&&Ye(e),super.fire(e))}parse(input,{reuseCache}={}){const stream=this.stream=new TokenStream(input),opts=this.options,e=!opts.globalsOnly&&this._unknownAtRule,t=e?opts.topDocOnly?Xe:He:We;init(reuseCache&&this),this.fire("startstylesheet");for(let n,r,tok;n=(tok=stream.grab()).id;)try{if(n===d&&(r=t[tok.atName]||e))r.call(this,stream,tok);else if(n===m);else{if(!e){stream.unget();break}!this._styleRule(stream,tok)&&stream.grab().id&&stream._failure()}}catch(e){if(e===We)break;if(!(e instanceof ParseError)||opts.strict)throw e.message=(n=e.stack).includes(r=e.message)?n:`${r}\n${n}`,e.line=tok.line,e.col=tok.col,e;this.fire(assign({},e,{type:"error",error:e}))}this.fire("endstylesheet")}_condition(stream,tok=stream.grab(),e){if(o.not.has(tok))this._conditionInParens(stream,void 0,e);else{let more;do{this._conditionInParens(stream,tok,e),tok=void 0}while(more=stream.matchSmart(M,more?o.or.has(more)?o.or:o.and:o.andOr))}}_conditionInParens(stream,tok=stream.matchSmart(ke.condition),e){let t,reuse,paren;if(e&&e.call(this,stream,tok));else if(tok.name)this._function(stream,tok),reuse=0;else if(tok.id===A&&(paren=tok,tok=stream.matchSmart(ke.condition)))if(e&&e.call(this,stream,tok,paren));else if(tok.id!==M)this._condition(stream,tok);else if(o.not.has(tok))this._conditionInParens(stream);else{if((t=stream.matchSmart(ke.colonLParen)).id===p)return void this._declaration(stream,tok,{colon:t,inParens:!0});t&&(this._expr(stream,F,!0),reuse=!0)}0!==reuse&&stream.matchSmart(F,{must:1,reuse})}_containerCondition(stream,tok,paren){if(paren&&tok.id===M)stream.unget(),this._mediaExpression(stream,paren);else{if(paren||"style"!==tok.name)return;this._condition(stream,{id:A})}return stream.unget(),!0}_layerName(stream,start){let tok,res="";for(;(tok=!res&&start||(res?stream.match(M):stream.matchSmart(M)))&&(res+=tok.text,stream.match(x));)res+=".";return res}_margin(stream,start){this._block(stream,start,{decl:!0,event:["pagemargin",{margin:start}]})}_mediaExpression(stream,start=stream.grab()){start.id!==A&&stream._failure(A);const feature=stream.matchSmart(ke.mediaValue,we);return feature.expr=this._expr(stream,F,!0),feature.offset2=stream.token.offset2,stream.matchSmart(F,ve),feature}_mediaQueryList(stream,tok){const list=[];for(;tok=stream.matchSmart(ke.mediaList,{reuse:tok});){const expr=[],mod=o.notOnly.has(tok)&&tok,next=mod?stream.matchSmart(ke.mediaList,we):tok,type=next.id===M&&next;type||expr.push(this._mediaExpression(stream,next));for(let more;stream.matchSmart(M,more||(type?o.and:o.andOr));)more||(more=o.and.has(stream.token)?o.and:o.or),expr.push(this._mediaExpression(stream));if((tok=TokenValue.from(expr,mod||next)).type=type,list.push(tok),!stream.matchSmart(g))break;tok=null}return list}_supportsCondition(stream,tok,paren){if(!paren&&"selector"===tok.name)return tok=this._selector(stream),stream.unget(),this.fire({type:"supportsSelector",selector:tok},tok),!0}_unknownAtRule(stream,start){if(this.options.strict)throw new ParseError("Unknown rule: "+start,start);stream.skipDeclBlock()}_selectorsGroup(stream,tok,relative,e){const t=[];let comma;for(;((tok=this._selector(stream,tok,relative))||e)&&(tok&&t.push(tok),(tok=stream.token).isVar&&(tok=stream.grab()),comma=tok.id===g);)tok=null;if(comma&&stream._failure(),t[0])return t}_selector(stream,tok,relative){const sel=[];if(tok&&!tok.isVar||(tok=stream.grab()),!relative||!t(ke.combinator,tok.id)){if(!(tok=this._simpleSelectorSequence(stream,tok)))return;sel.push(tok),tok=null}for(let combinator,e;;tok=null)if(tok||(tok=stream.token),t(ke.combinator,tok.id))sel.push(this._combinator(stream,tok)),sel.push(this._simpleSelectorSequence(stream)||stream._failure());else{for(;tok.isVar;)tok=stream.get();if(e=tok.id===I&&tok,!e)break;if((tok=stream.grab()).id===C)break;combinator=t(ke.combinator,tok.id)&&this._combinator(stream,tok),(tok=this._simpleSelectorSequence(stream,combinator?void 0:tok))?(sel.push(combinator||this._combinator(stream,e)),sel.push(tok)):combinator&&stream._failure()}return TokenValue.from(sel)}_simpleSelectorSequence(stream,start=stream.grab()){let e,tag,n,r=start.id;if("--"===start.type||!t(ke.selectorStart,r))return;let tok=start;const mods=[];for(;r===c;)mods.push(ot[c](stream,tok)),r=(tok=stream.get()).id;if(r===O||(r===P||r===M)&&(n=stream.get()).id===O?(e=n?tok:"",tok=null):n&&(tag=tok,tok=n),!e||(tag=stream.match(ke.identStar))){for(;;){tok||(tok=stream.get());const e=ot[tok.id];if(!(tok=e&&e.call(this,stream,tok)))break;mods.push(tok),tok=!1}return tok=Token.from(start),tok.ns=e,tok.elementName=tag||"",tok.modifiers=mods,tok.offset2=(mods[mods.length-1]||tok).offset2,tok}r!==O&&stream.unget()}_combinator(stream,tok=stream.matchSmart(ke.combinator)){return tok&&(tok.type=Combinators[tok.code]||"unknown"),tok}_declaration(stream,tok,{colon:n,inParens:r,scope}={}){const opts=this.options,i="--"===tok.type,hack=tok.hack?((tok=stream.match(M)).col--,tok.offset--,"*"):95===tok.code&&opts.underscoreHack&&tok.id===M&&"_",a=!n&&stream.source.mark(),s=n||stream.get(),l=n||(s.id===I||s.isVar)&&stream.grab()||s;let c;if(hack&&(tok.hack=hack,e.value=tok.text.slice(1),define(tok,"text",e),e.value=st,define(tok,"toString",e)),l.id!==p||(c=stream.get(N).id)===p){for(;stream.token!==tok;)stream.unget();if(!r&&(c||!i||t(ke.nestSelBlock,l.id)))return;if(tok.isVar)return!0;stream.source.reset(a),stream._resetBuf(),stream._failure('":"',s)}c!==I&&stream.unget();const events=!r&&!i&&(c===M||c===v)&&(this._events=[]),expr=this._expr(stream,i?ke.propCustomEnd:r?ke.propValEndParen:ke.propValEnd,i),d=stream.token,value=expr||i&&TokenValue.empty(d),brace=!r&&d.id===C;if(events){if(this._events=null,brace)return stream.source.reset(a),void stream._resetBuf();for(const e of events)this.fire(...e)}if(brace)throw stream._pair=B,new ParseError(`Unexpected "{" in "${tok}" declaration`,d);value||(d.id===B&&stream.unget(),stream._failure(""));const invalid=!i&&!tok.isVar&&!opts.noValidation&&ne(tok,value,0,scope),important=d.id===y&&stream.matchSmart(M,{must:1,text:o.important}),u=stream.matchSmart(r?F:ke.declEnd,{must:1,reuse:!important}).id;return this.fire({type:"property",property:tok,message:invalid&&invalid.message,important,inParens:r,invalid,scope,value},tok),u===B&&stream.unget(),u}_declarationFailed(stream,err,e){const t=stream._pair;t&&(stream._pair=0,this._expr(stream,t,!0)),stream.skipDeclBlock(e),this.fire(assign({},err,{type:err.type||"error",recoverable:!stream.source.eof(),error:err}))}_expr(stream,end,e){const parts=[],t="object"==typeof end;let tok,n,r,i;for(;(n=(tok=stream.get(N,0)).id)&&!(t?end[n]:end===n);){if(i=Parens[n]){if(!e&&n===C&&parts.length)break;tok.expr=this._expr(stream,i,e),stream.token.id!==i&&stream._failure(i),tok.offset2=stream.token.offset2,tok.type="block"}else n===v?tok.ie&&!this.options.ieFilters||(tok=this._function(stream,tok,e),r=r||tok.isVar):n===N?r=!0:e||(n===S?this._hexcolor(stream,tok):n!==M||tok.type||(o.autoNone.has(tok)?(110===tok.code&&(tok.isNone=!0),tok.type="ident"):tok.type=o.colors.has(tok)?"color":"ident"));parts.push(tok)}if(parts[0]){const res=TokenValue.from(parts);return r&&(res.isVar=!0),res}}_function(stream,tok,e){return TokenFunc.from(tok,this._expr(stream,F,e),stream.token)}_hexcolor(stream,tok){let text,len,offset,e,n;if(4===(len=tok.length)||5===len||7===len||9===len)for(t(tok,"text")?(offset=0,text=tok.text):({_input:text,offset}=tok),e=1;e<len&&(n=text.charCodeAt(offset+e),!((n<48||n>57)&&(n<65||n>70)&&(n<97||n>102)));e++);e===len?tok.type="color":this.alarm(1,`Expected a hex color but found "${clipString(tok)}".`,tok)}_styleRule(stream,tok,opts){const e=!this._inStyle;if(e&&Ke(tok))return!0;let t,brace;try{const n=tok.id===c?-1:stream._amp,sels=this._selectorsGroup(stream,tok,!0);if(!sels)return void stream.unget();this._inScope||this._inStyle||!(stream._amp>n||sels.some(at))||this.alarm(2,"Nested selector must be inside a style rule.",tok),brace=stream.matchSmart(C,ve),t=e&&Je(sels[0]);const msg={selectors:sels},r={brace,decl:!0,event:["rule",msg]};this._block(stream,sels[0],opts?assign({},opts,r):r),t&&!msg.empty&&(et(),t=0)}catch(e){if(this.options.strict||!(e instanceof ParseError))throw e;return void this._declarationFailed(stream,e,!!brace)}finally{t&&tt(t)}return!0}_block(stream,start,opts={}){const{margins:e,scoped,decl:n,event=[]}=opts,{brace=stream.matchSmart(C,we)}=opts,[type,msg=(event[1]={})]=event||[];type&&this.fire(assign({type:"start"+type,brace},msg),start);const r=scoped?{scope:start.atName}:{},i=this._inStyle+=n?1:0,a=i&&this.options.starHack&&P;let s,child;this._stack.push(start);for(let n,tok,l,c;(l=(tok=stream.get(N,!1)).id)!==B;)if(l||stream._failure("}"),!(l===L||l===N&&(child=1))){tok===n&&stream._failure(""),n=tok;try{l===d?(c=tok.atName,c=e&&o.marginSyms.has(c)&&this._margin||He[c]||this._unknownAtRule,c.call(this,stream,tok),child=1):i&&(l===M||l===a&&tok.hack)&&this._declaration(stream,tok,r)?child=1:scoped||"--"===tok.type||i&&!t(ke.nestSel,l)?s=stream._failure("",tok,!1):child=this._styleRule(stream,tok,opts)}catch(e){s=e}if(s){if(this.options.strict||!(s instanceof ParseError))break;if(this._declarationFailed(stream,s),!l)break;s=null}}if(this._stack.pop(),n&&this._inStyle--,s)throw s;type&&(msg.empty=!child,this.fire(assign({type:"end"+type},msg)))}},Properties,ScopedProperties:a,Tokens,TokenStream,Units:ye},util:{Bucket,EventDispatcher,Matcher,StringSource,TokenIdByCode:Z,VTComplex:s,VTFunctions,VTSimple:J,UnitTypeIds:xe,cache:parserCache,clipString,describeProp:ie,isOwn:t,pick,validateProperty:ne}};return parserlib})();