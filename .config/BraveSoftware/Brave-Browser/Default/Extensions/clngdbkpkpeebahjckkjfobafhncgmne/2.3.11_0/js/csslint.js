var CSSLint=(()=>{let e,t;function r(prop){const e=prop.lowText??=prop.text.toLowerCase(),t=prop.vendorPos;return t?e.slice(t):e}function o(parser,{start,property,end}){for(const e of["container","fontface","keyframerule","media","page","pagemargin","rule","supports","viewport"])start&&parser.addListener("start"+e,start),end&&parser.addListener("end"+e,end);property&&parser.addListener("property",property)}function i(parser,{property,end}){const stack=[];let props;o(parser,{start(){stack.push(props),props=null},property(event){if(!stack.length||event.inParens)return;const name=r(event.property),o=(t||s()&&t)[name];o?(props||(props={}),(props[o]||(props[o]={}))[name]=event):property&&props&&name in e&&property(event,props,name)},end(event){end&&props&&(e||s(),end(event,props)),props=stack.pop()}})}function s(){e=Object.create(null),t=Object.create(null);const r="width|style|color",o="top|bottom|left|right";for(const[i,pattern,...args]of[["animation","%-1","name|duration|timing-function|delay|iteration-count|direction|fill-mode|play-state"],["background","%-1","image|size|position|repeat|origin|clip|attachment|color"],["border","%-1-2",o,r],["border-top","%-1",r],["border-left","%-1",r],["border-right","%-1",r],["border-bottom","%-1",r],["border-block-end","%-1",r],["border-block-start","%-1",r],["border-image","%-1","source|slice|width|outset|repeat"],["border-inline-end","%-1",r],["border-inline-start","%-1",r],["border-radius","border-1-2-radius","top|bottom","left|right"],["border-color","border-1-color",o],["border-style","border-1-style",o],["border-width","border-1-width",o],["column-rule","%-1",r],["columns","column-1","width|count"],["flex","%-1","grow|shrink|basis"],["flex-flow","flex-1","direction|wrap"],["font","%-style|%-variant|%-weight|%-stretch|%-size|%-family|line-height"],["grid","%-1","template-rows|template-columns|template-areas|auto-rows|auto-columns|auto-flow|column-gap|row-gap"],["grid-area","grid-1-2","row|column","start|end"],["grid-column","%-1","start|end"],["grid-gap","grid-1-gap","row|column"],["grid-row","%-1","start|end"],["grid-template","%-1","columns|rows|areas"],["list-style","list-1","type|position|image"],["margin","%-1",o],["mask","%-1","image|mode|position|size|repeat|origin|clip|composite"],["outline","%-1",r],["padding","%-1",o],["text-decoration","%-1","color|style|line"],["text-emphasis","%-1","style|color"],["transition","%-1","delay|duration|property|timing-function"]]){let res=pattern.replace(/%/g,i);args.forEach((arg,e)=>{res=arg.replace(/[^|]+/g,res.replace(new RegExp(`${e+1}`,"g"),"$$&"))}),(e[i]=res.split("|")).forEach(e=>{t[e]=i})}return e}class Reporter{constructor(lines,e,allow,ignore){this.messages=[],this.stats=[],this.lines=lines,this.ruleset=e,this.allow=allow||{},this.ignore=ignore||[]}error(message,{line=1,col=1},rule={}){this.messages.push({type:"error",evidence:this.lines[line-1],line,col,message,rule})}report(message,{line=1,col=1},rule){line in this.allow&&rule.id in this.allow[line]||this.ignore.some(range=>range[0]<=line&&line<=range[1])||this.messages.push({type:2===this.ruleset[rule.id]?"error":"warning",evidence:this.lines[line-1],line,col,message,rule})}info(message,{line=1,col=1},rule){this.messages.push({type:"info",evidence:this.lines[line-1],line,col,message,rule})}rollupError(message,rule){this.messages.push({type:"error",rollup:!0,message,rule})}rollupWarn(message,rule){this.messages.push({type:"warning",rollup:!0,message,rule})}stat(name,value){this.stats[name]=value}}let n;const a=/\/\*\s*csslint\s+((?:[^*]+|\*(?!\/))+?)\*\//gi,l=/([-<])(int|len|num|pct|rel-(\w{3}))(?=\W)/g,d={int:"integer",len:"length",num:"number",pct:"percentage","rel-hsl":"h-s-l-alpha-none","rel-hwb":"h-w-b-alpha-none","rel-lab":"l-a-b-alpha-none","rel-lch":"l-c-h-alpha-none","rel-rgb":"r-g-b-alpha-none"},c=(e,t,str)=>t+d[str]||str,u={true:2,2:2,"":1,1:1,false:0,0:0},rules={__proto__:null,"box-model":[{desc:"width or height specified with padding or border and no box-sizing.",url:"Beware-of-box-model-size"},(rule,parser,reporter)=>{const e={width:["border","border-left","border-right","padding","padding-left","padding-right"],height:["border","border-bottom","border-top","padding","padding-bottom","padding-top"]},stack=[];let props;o(parser,{start(){stack.push(props),props={}},property(event){if(!props||event.inParens)return;const name=r(event.property);e.width.includes(name)||e.height.includes(name)?/^0+\D*$/.test(event.value)||"border"===name&&/^none$/i.test(event.value)||(props[name]={line:event.property.line,col:event.property.col,value:event.value}):("box-sizing"===name||/^(width|height)/i.test(name)&&/^(length|%)/.test(event.value.parts[0].type))&&(props[name]=1)},end(){if(!props["box-sizing"])for(const size in e)if(props[size])for(const prop of e[size]){if("padding"!==prop||!props[prop])continue;const{value:{parts},line,col}=props[prop];(2!==parts.length||parts[0].number)&&reporter.report(`No box-sizing and ${size} in ${prop}`,{line,col},rule)}props=stack.pop()}})}],"compatible-vendor-prefixes":[{desc:"Require all compatible vendor prefixes.",url:"Require-compatible-vendor-prefixes"},(rule,parser,reporter)=>{const e={animation:"webkit","animation-delay":"webkit","animation-direction":"webkit","animation-duration":"webkit","animation-fill-mode":"webkit","animation-iteration-count":"webkit","animation-name":"webkit","animation-play-state":"webkit","animation-timing-function":"webkit",appearance:"webkit moz","border-end":"webkit moz","border-end-color":"webkit moz","border-end-style":"webkit moz","border-end-width":"webkit moz","border-image":"webkit moz o","border-radius":"webkit","border-start":"webkit moz","border-start-color":"webkit moz","border-start-style":"webkit moz","border-start-width":"webkit moz","box-align":"webkit moz","box-direction":"webkit moz","box-flex":"webkit moz","box-lines":"webkit","box-ordinal-group":"webkit moz","box-orient":"webkit moz","box-pack":"webkit moz","box-sizing":"","box-shadow":"","column-count":"webkit moz ms","column-gap":"webkit moz ms","column-rule":"webkit moz ms","column-rule-color":"webkit moz ms","column-rule-style":"webkit moz ms","column-rule-width":"webkit moz ms","column-width":"webkit moz ms",flex:"webkit ms","flex-basis":"webkit","flex-direction":"webkit ms","flex-flow":"webkit","flex-grow":"webkit","flex-shrink":"webkit",hyphens:"epub moz","line-break":"webkit ms","margin-end":"webkit moz","margin-start":"webkit moz","marquee-speed":"webkit wap","marquee-style":"webkit wap","padding-end":"webkit moz","padding-start":"webkit moz","tab-size":"moz o","text-size-adjust":"webkit ms",transform:"webkit ms","transform-origin":"webkit ms",transition:"","transition-delay":"","transition-duration":"","transition-property":"","transition-timing-function":"","user-modify":"webkit moz","user-select":"webkit moz ms","word-break":"epub ms","writing-mode":"epub ms"},t=[];let properties=[],r=!1,started=0;for(const prop in e){const r=e[prop].split(" ").map(e=>`-${e}-${prop}`);e[prop]=r,t.push(...r)}parser.addListener("startrule",()=>{started++,properties=[]}),parser.addListener("startkeyframes",event=>{started++,r=event.prefix||!0,r&&"string"==typeof r&&(r="-"+r+"-")}),parser.addListener("endkeyframes",()=>{started--,r=!1}),parser.addListener("property",event=>{if(!started)return;const name=event.property.text;r&&"string"==typeof r&&name.startsWith(r)||!t.includes(name)||properties.push(event.property)}),parser.addListener("endrule",()=>{if(started=!1,!properties.length)return;const groups={};for(const name of properties)for(const prop in e){const t=e[prop];t.includes(name.text)&&(groups[prop]||(groups[prop]={full:t.slice(0),actual:[],actualNodes:[]}),groups[prop].actual.includes(name.text)||(groups[prop].actual.push(name.text),groups[prop].actualNodes.push(name)))}for(const prop in groups){const value=groups[prop],actual=value.actual,len=actual.length;if(!(value.full.length<=len))for(const item of value.full)if(!actual.includes(item)){const spec=1===len?actual[0]:actual.join(2===len?" and ":", ");reporter.report(`"${item}" is compatible with ${spec} and should be included as well.`,value.actualNodes[0],rule)}}})}],"display-property-grouping":[{desc:"Must use properties compatible with the value of `display`.",url:"Require-properties-appropriate-for-display"},(rule,parser,reporter)=>{let props;const e={display:1,float:"none",height:1,width:1,margin:1,"margin-left":1,"margin-right":1,"margin-bottom":1,"margin-top":1,padding:1,"padding-left":1,"padding-right":1,"padding-bottom":1,"padding-top":1,"vertical-align":1},stack=[],t=(name,display,msg)=>{const prop=props[name];prop&&e[name]!==prop.value.toLowerCase()&&reporter.report(msg||`"${name}" can't be used with display: ${display}.`,prop,rule)},i=["height","width","margin","margin-top","margin-bottom"],s=["margin","margin-left","margin-right","margin-top","margin-bottom","float"];o(parser,{start(){stack.push(props),props={}},property(event){if(!props||event.inParens)return;const name=r(event.property);name in e&&(props[name]={value:event.value.text,line:event.property.line,col:event.property.col})},end(){let e;if(props&&(e=props.display))if(e=e.value.toLowerCase(),"inline"===e){for(const r of i)t(r,e);t("float",e,'"display:inline" has no effect on floated elements (but may be used to fix the IE6 double-margin bug).')}else if("block"===e)t("vertical-align",e);else if("inline-block"===e)t("float",e);else if(e&&/^table-/i.test(e))for(const r of s)t(r,e);props=stack.pop()}})}],"duplicate-background-images":[{desc:"Same background-image must be extracted to a common class.",url:"Disallow-duplicate-background-images"},(rule,parser,reporter)=>{const stack={};parser.addListener("property",event=>{if(/^-(webkit|moz|ms|o)-background(-image)$/i.test(event.property.text))for(const part of event.value.parts){if("uri"!==part.type)continue;const uri=stack[part.uri];uri?reporter.report(rule.desc+`. First declared at ${uri.line}:${uri.col}.`,event,rule):stack[part.uri]=event}})}],"duplicate-properties":[{desc:"Duplicate properties must be next to each other; exact duplicates are forbidden.",url:"Disallow-duplicate-properties"},(rule,parser,reporter)=>{const stack=[];let props,e;o(parser,{start(){stack.push(props),props={}},property(event){if(!props||event.inParens)return;const property=event.property,name=property.text.toLowerCase(),last=props[name],t=last===event.value.text;last&&(e!==name||t)&&reporter.report(`${t?"Duplicate":"Ungrouped duplicate"} "${property}".`,event,rule),props[name]=event.value.text,e=name},end(){props=stack.pop()}})}],"empty-rules":[{desc:"Rule without declarations must be removed.",url:"Disallow-empty-rules"},(rule,parser,reporter)=>{parser.addListener("endrule",event=>{event.empty&&reporter.report("Empty rule.",event.selectors[0],rule)})}],errors:[{name:"Parsing Errors",desc:"Recoverable syntax errors."},(rule,parser,reporter)=>{parser.addListener("error",e=>reporter.error(e.message,e,rule))}],floats:[{desc:"More than 9 `float` declarations. Consider using a grid system instead.",url:"Disallow-too-many-floats"},(rule,parser,reporter)=>{let count=0;parser.addListener("property",({property,value})=>{count+="float"===r(property)&&"none"!==value.text.toLowerCase()}),parser.addListener("endstylesheet",()=>{reporter.stat("floats",count),count>=10&&reporter.rollupWarn(count+": "+rule.desc,rule)})}],"font-faces":[{desc:"More than 5 web fonts.",url:"Don%27t-use-too-many-web-fonts"},(rule,parser,reporter)=>{let count=0;parser.addListener("startfontface",()=>count++),parser.addListener("endstylesheet",()=>{count>5&&reporter.rollupWarn(count+": "+rule.desc,rule)})}],"font-sizes":[{desc:"More than 9 `font-size` declarations.",url:"Don%27t-use-too-many-font-size-declarations"},(rule,parser,reporter)=>{let count=0;parser.addListener("property",event=>{count+="font-size"===r(event.property)}),parser.addListener("endstylesheet",()=>{reporter.stat("font-sizes",count),count>=10&&reporter.rollupWarn(count+": "+rule.desc,rule)})}],"globals-in-document":[{desc:"Nested @import, @charset, @namespace inside @-moz-document."},(rule,parser,reporter)=>{let level=0,index=0;parser.addListener("startdocument",()=>level++),parser.addListener("enddocument",()=>level--*index++);const check=event=>{level&&index&&reporter.report(`A nested @${event.type} is valid only if this @-moz-document section is the first one matched for any given URL.`,event,rule)};parser.addListener("import",check),parser.addListener("charset",check),parser.addListener("namespace",check)}],gradients:[{desc:"Require all vendor prefixes when using a vendor-prefixed gradient.",url:"Require-all-gradient-definitions"},(rule,parser,reporter)=>{const stack=[];let e;o(parser,{start(){stack.push(e),e=null},property({inParens:t,value:{parts:[r]}}){t||r&&r.prefix&&/(-|^)gradient$/.test(r.name)&&(e||(e={"-moz-":r,"-webkit-":r}),delete e[r.prefix])},end(){let t;e&&(t=Object.keys(e))[0]&&reporter.report(`Missing ${t.join(",")} prefix${t[1]?"es":""} for gradient.`,e[t[0]],rule),e=stack.pop()}})}],ids:[{desc:"#id selectors are forbidden.",url:"Disallow-IDs-in-selectors"},(rule,parser,reporter)=>{parser.addListener("startrule",event=>{for(const sel of event.selectors){const e=sel.parts.reduce((sum=0,{modifiers})=>modifiers?modifiers.reduce((e,mod)=>e+("id"===mod.type),0):sum,0);e&&reporter.report(`Id in selector${e>1?"!".repeat(e):"."}`,sel,rule)}})}],import:[{desc:"@import prevents parallel downloads and may be blocked by CSP.",url:"Disallow-%40import"},(rule,parser,reporter)=>{parser.addListener("import",e=>{reporter.report(rule.desc,e,rule)})}],important:[{desc:"More than 9 !important declarations.",url:"Disallow-%21important"},(rule,parser,reporter)=>{let count=0;parser.addListener("property",event=>{event.important&&(count++,reporter.report("!important.",event,rule))}),parser.addListener("endstylesheet",()=>{reporter.stat("important",count),count>=10&&reporter.rollupWarn(count+": "+rule.desc,rule)})}],"known-properties":[{desc:"Unknown property per CSS spec without a vendor prefix.",url:"Require-use-of-known-properties"},(rule,parser,reporter)=>{parser.addListener("property",event=>{const inv=event.invalid;inv&&reporter.report(inv.message,inv,rule)})}],"known-pseudos":[{name:"Require use of known pseudo selectors",url:"https://developer.mozilla.org/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements"},(rule,parser,reporter)=>{const e=16,t=32,DEAD=3735879680,definitions={after:3,backdrop:2,before:3,cue:2,"cue-region":2,"file-selector-button":2,"first-letter":3,"first-line":3,"grammar-error":2,highlight:6,marker:2,part:6,placeholder:34,selection:34,slotted:6,"spelling-error":2,"target-text":2,active:1,"any-link":49,autofill:17,blank:1,checked:1,current:9,default:1,defined:1,dir:5,disabled:1,drop:1,empty:1,enabled:1,first:1,"first-child":1,"first-of-type":1,focus:1,"focus-visible":1,"focus-within":1,fullscreen:1,future:1,has:5,host:9,"host-context":5,hover:1,"in-range":1,indeterminate:1,invalid:1,is:5,lang:5,"last-child":1,"last-of-type":1,left:1,link:1,"local-link":1,not:5,"nth-child":5,"nth-col":5,"nth-last-child":5,"nth-last-col":5,"nth-last-of-type":5,"nth-of-type":5,"only-child":1,"only-of-type":1,optional:1,"out-of-range":1,past:1,paused:1,"picture-in-picture":1,"placeholder-shown":1,playing:1,"read-only":1,"read-write":1,required:1,right:1,root:1,scope:1,state:5,target:1,"target-within":1,"user-invalid":1,valid:1,visited:1,where:5,"xr-overlay":1,"corner-present":1,decrement:1,"double-button":1,end:1,horizontal:1,increment:1,"no-button":1,"single-button":1,start:1,vertical:1,"window-inactive":33},r={any:53,"calendar-picker-indicator":18,"clear-button":18,"color-swatch":18,"color-swatch-wrapper":18,"date-and-time-value":18,"datetime-edit":18,"datetime-edit-ampm-field":18,"datetime-edit-day-field":18,"datetime-edit-fields-wrapper":18,"datetime-edit-hour-field":18,"datetime-edit-millisecond-field":18,"datetime-edit-minute-field":18,"datetime-edit-month-field":18,"datetime-edit-second-field":18,"datetime-edit-text":18,"datetime-edit-week-field":18,"datetime-edit-year-field":18,"details-marker":18+DEAD,drag:17,"drag-over":33,"file-upload-button":18,"focus-inner":34,focusring:33,"full-page-media":17,"full-screen":49,"full-screen-ancestor":49,"inner-spin-button":18,"input-placeholder":51,loading:33,"media-controls":18,"media-controls-current-time-display":18,"media-controls-enclosure":18,"media-controls-fullscreen-button":18,"media-controls-mute-button":18,"media-controls-overlay-enclosure":18,"media-controls-overlay-play-button":18,"media-controls-panel":18,"media-controls-play-button":18,"media-controls-time-remaining-display":18,"media-controls-timeline":18,"media-controls-timeline-container":18,"media-controls-toggle-closed-captions-button":18,"media-controls-volume-slider":18,"media-slider-container":18,"media-slider-thumb":18,"media-text-track-container":18,"media-text-track-display":18,"media-text-track-region":18,"media-text-track-region-container":18,"meter-bar":18,"meter-even-less-good-value":18,"meter-inner-element":18,"meter-optimum-value":18,"meter-suboptimum-value":18,"outer-spin-button":18,"progress-bar":18,"progress-inner-element":18,"progress-value":18,resizer:18,scrollbar:18,"scrollbar-button":18,"scrollbar-corner":18,"scrollbar-thumb":18,"scrollbar-track":18,"scrollbar-track-piece":18,"search-cancel-button":18,"search-decoration":18,"slider-container":18,"slider-runnable-track":18,"slider-thumb":18,"textfield-decoration-container":18},o=/^(:+)(?:-(\w+)-)?([^(]+)(\()?/i,i=({parts})=>{for(const{modifiers}of parts||[])if(modifiers)for(const mod of modifiers)if("pseudo"===mod.type){const{text}=mod,[all,i,prefix,name,paren]=o.exec(text.toLowerCase())||0,s=r[name],def=definitions[name]||s;for(const err of def?[i.length>1?!(2&def)&&"Must use : in":!(1&def)&&":-moz-placeholder"!==all&&"Must use :: in",paren?!(12&def)&&"Unexpected ( in":4&def&&"Must use ( after",prefix?(!(48&def)||"webkit"===prefix&&!(def&e)||"moz"===prefix&&!(def&t))&&"Unexpected prefix in":s&&`Must use ${(def&e&&def&t?"-webkit- or -moz-":def&e&&"-webkit-")||"-moz-"} prefix in`,def&DEAD&&"Deprecated"]:["Unknown pseudo"])err&&reporter.report(`${err} ${text.slice(0,all.length)}`,mod,rule)}else mod.args&&mod.args.forEach(i)};parser.addListener("startrule",e=>e.selectors.forEach(i)),parser.addListener("supportsSelector",e=>i(e.selector))}],"order-alphabetical":[{desc:"Properties must be ordered alphabetically."},(rule,parser,reporter)=>{const stack=[];let last,failed;o(parser,{start(){stack.push({last,failed}),last="",failed=!1},property(event){if(!event.inParens&&!failed){const name=r(event.property);name<last&&(reporter.report(`Non-alphabetical order: "${name}".`,event,rule),failed=!0),last=name}},end(){({last,failed}=stack.pop())}})}],"outline-none":[{desc:"none or 0 for `outline` outside of :focus rule.",url:"Disallow-outline%3Anone"},(rule,parser,reporter)=>{let e;o(parser,{start(event){e=event.selectors?{line:event.line,col:event.col,selectors:event.selectors,propCount:0,outline:!1}:null},property(event){e&&!event.inParens&&(e.propCount++,"outline"===r(event.property)&&/^(none|0)$/i.test(event.value)&&(e.outline=!0))},end(){const{outline,selectors:t,propCount:r}=e||{};e=null,outline&&(/:focus/i.test(t)?1===r&&reporter.report("Outlines shouldn't be hidden unless other visual changes are made.",e,rule):reporter.report("Outlines should only be modified using :focus.",e,rule))}})}],"overqualified-elements":[{desc:".class or #id after an element tag is forbidden.",url:"Disallow-overqualified-elements"},(rule,parser,reporter)=>{const classes={},report=(part,mod)=>{reporter.report(`"${part}" is overqualified, just use "${mod}" without element name.`,part,rule)};parser.addListener("startrule",event=>{for(const selector of event.selectors)for(const part of selector.parts)if(part.modifiers)for(const mod of part.modifiers)part.elementName&&"id"===mod.type?report(part,mod):"class"===mod.type&&(classes[mod]||(classes[mod]=[])).push({modifier:mod,part})}),parser.addListener("endstylesheet",()=>{for(const prop of Object.values(classes)){const{part,modifier}=prop[0];part.elementName&&1===prop.length&&report(part,modifier)}})}],"qualified-headings":[{desc:"Qualified headings like `div h1`.",url:"Disallow-qualified-headings"},(rule,parser,reporter)=>{parser.addListener("startrule",event=>{for(const selector of event.selectors){let first=!0;for(const part of selector.parts){const name=part.elementName;!first&&name&&/h[1-6]/.test(name)&&reporter.report(`Heading "${name}" should not be qualified.`,part,rule),first=!1}}})}],"regex-selectors":[{desc:"Slow attribute selectors with substring matching (^= $= *=. |= ~=).",url:"Disallow-selectors-that-look-like-regular-expressions"},(rule,parser,reporter)=>{parser.addListener("startrule",event=>{for(const{parts}of event.selectors)for(const{modifiers}of parts)if(modifiers)for(const mod of modifiers){const e="attribute"===mod.type&&mod.args[2];e&&2===e.length&&reporter.report(`Slow attribute selector ${e}.`,e,rule)}})}],"selector-newline":[{desc:"A new line between selectors is a forgotten comma and not a descendant combinator."},(rule,parser,reporter)=>{parser.addListener("startrule",event=>{for(const{parts}of event.selectors)for(let e,t,r=0;r<parts.length-1&&(e=parts[r]);r++)"descendant"===e.type&&(t=parts[r+1]).line>e.line&&reporter.report("Line break in selector (forgot a comma?)",t,rule)})}],shorthand:[{desc:"Use shorthand declaration instead of several individual properties.",url:"Require-shorthand-properties"},(rule,parser,reporter)=>{i(parser,{end(event,props){for(const[t,events]of Object.entries(props)){const names=Object.keys(events);if(names.length===e[t].length){const msg=`"${t}" shorthand can replace "${names.join('" + "')}"`;names.forEach(e=>reporter.report(msg,events[e],rule))}}}})}],"shorthand-overrides":[{desc:"Use shorthand declarations before individual properties."},(rule,parser,reporter)=>{i(parser,{property(event,props,name){const ovr=props[name];ovr&&(delete props[name],reporter.report(`"${event.property}" overrides "${Object.keys(ovr).join('" + "')}" above.`,event,rule))}})}],"simple-not":[{desc:"Simple selector must be used inside :not() for backwards compatibility."},(rule,parser,reporter)=>{parser.addListener("startrule",e=>{let t,r;for(const sel of e.selectors)for(const part of sel.parts)if(part.modifiers)for(const{name,args}of part.modifiers)"not"===name&&args[0]&&(args[1]||(t=args[0].parts)[1]||(r=t[0]).modifiers.length+(r.elementName?1:0)>1)&&reporter.report("Complex selector inside :not().",args[0],rule)})}],"star-property-hack":[{desc:"Forbid star prefixed *property (IE6 hack).",url:"Disallow-star-hack"},(rule,parser,reporter)=>{parser.addListener("property",({property})=>{"*"===property.hack&&reporter.report("IE star prefix.",property,rule)})}],"style-rule-nesting":[{desc:"Nesting inside style rules is not backwards-compatible."},(rule,parser,reporter)=>{o(parser,{start(evt){parser._inStyle&&reporter.report(rule.desc,evt,rule)}})}],"text-indent":[{desc:"Large negative text-indent without `direction:ltr` causes problems in RTL languages.",url:"Disallow-negative-text-indent"},(rule,parser,reporter)=>{let e,t;o(parser,{start(){e=!1,t=!1},property(event){if(event.inParens)return;const name=r(event.property),value=event.value;"text-indent"===name&&value.parts[0].number<-99?e=event.property:"direction"===name&&/^ltr$/i.test(value)&&(t=!0)},end(){e&&!t&&reporter.report(rule.desc,e,rule)}})}],"underscore-property-hack":[{url:"Disallow-underscore-hack",desc:"Forbid underscore prefixed _property (IE6 hack)."},(rule,parser,reporter)=>{parser.addListener("property",({property})=>{"_"===property.hack&&reporter.report("IE underscore prefix.",property,rule)})}],"unique-headings":[{desc:"Forbid redefinition of headings.",url:"Headings-should-only-be-defined-once"},(rule,parser,reporter)=>{const e=new Array(6).fill(0);parser.addListener("startrule",event=>{for(const{parts}of event.selectors){const t=parts[parts.length-1];/h([1-6])/i.test(t.elementName)&&!t.modifiers.some(mod=>"pseudo"===mod.type)&&++e[RegExp.$1-1]>1&&reporter.report(`Heading ${t.elementName} has already been defined.`,t,rule)}}),parser.addListener("endstylesheet",()=>{const stats=e.filter(e=>e>1).map((e,t)=>`${e} H${t+1}s`);stats.length&&reporter.rollupWarn(stats.join(", "),rule)})}],"universal-selector":[{desc:"Universal selector (*) is slow.",url:"Disallow-universal-selector"},(rule,parser,reporter)=>{parser.addListener("startrule",event=>{for(const{parts}of event.selectors){const part=parts[parts.length-1];"*"===part.elementName&&reporter.report(rule.desc,part,rule)}})}],"unqualified-attributes":[{desc:"Unqualified attribute selector is slow.",name:"Disallow-unqualified-attribute-selectors"},(rule,parser,reporter)=>{parser.addListener("startrule",event=>{event.selectors.forEach(({parts})=>{const part=parts[parts.length-1],mods=part.modifiers;if(mods&&"*"===(part.elementName||"*")){let attr;for(const e of mods){if("class"===e.type||"id"===e.type)return;"attribute"===e.type&&(attr=e)}attr&&reporter.report(rule.desc,attr,rule)}})})}],"vendor-prefix":[{desc:"Require an additional non-prefixed declaration when using vendor prefixes.",url:"Require-standard-property-with-vendor-prefix"},(rule,parser,reporter)=>{const e={"-webkit-border-radius":"border-radius","-webkit-border-top-left-radius":"border-top-left-radius","-webkit-border-top-right-radius":"border-top-right-radius","-webkit-border-bottom-left-radius":"border-bottom-left-radius","-webkit-border-bottom-right-radius":"border-bottom-right-radius","-o-border-radius":"border-radius","-o-border-top-left-radius":"border-top-left-radius","-o-border-top-right-radius":"border-top-right-radius","-o-border-bottom-left-radius":"border-bottom-left-radius","-o-border-bottom-right-radius":"border-bottom-right-radius","-moz-border-radius":"border-radius","-moz-border-radius-topleft":"border-top-left-radius","-moz-border-radius-topright":"border-top-right-radius","-moz-border-radius-bottomleft":"border-bottom-left-radius","-moz-border-radius-bottomright":"border-bottom-right-radius","-moz-column-count":"column-count","-webkit-column-count":"column-count","-moz-column-gap":"column-gap","-webkit-column-gap":"column-gap","-moz-column-rule":"column-rule","-webkit-column-rule":"column-rule","-moz-column-rule-style":"column-rule-style","-webkit-column-rule-style":"column-rule-style","-moz-column-rule-color":"column-rule-color","-webkit-column-rule-color":"column-rule-color","-moz-column-rule-width":"column-rule-width","-webkit-column-rule-width":"column-rule-width","-moz-column-width":"column-width","-webkit-column-width":"column-width","-webkit-column-span":"column-span","-webkit-columns":"columns","-moz-box-shadow":"box-shadow","-webkit-box-shadow":"box-shadow","-moz-transform":"transform","-webkit-transform":"transform","-o-transform":"transform","-ms-transform":"transform","-moz-transform-origin":"transform-origin","-webkit-transform-origin":"transform-origin","-o-transform-origin":"transform-origin","-ms-transform-origin":"transform-origin","-moz-box-sizing":"box-sizing","-webkit-box-sizing":"box-sizing"},stack=[];let props,num;o(parser,{start(){stack.push({num,props}),props={},num=1},property(event){if(!props||event.inParens)return;const name=r(event.property);let prop=props[name];prop||(prop=props[name]=[]),prop.push({name:event.property,value:event.value,pos:num++})},end(){const t=[];for(const prop in props)prop in e&&t.push({actual:prop,needed:e[prop]});for(const{needed,actual}of t){const unit=props[actual][0].name;props[needed]?props[needed][0].pos<props[actual][0].pos&&reporter.report(`Standard property "${needed}" should come after vendor-prefixed property "${actual}".`,unit,rule):reporter.report(`Missing standard property "${needed}" to go along with "${actual}".`,unit,rule)}({num,props}=stack.pop())}})}],warnings:[{desc:"Parser warnings."},(rule,parser,reporter)=>{parser.addListener("warning",e=>reporter.report(e.message,e,rule))}],"zero-units":[{desc:'Unit suffix for "0" is redundant.',url:"Disallow-units-for-zero-values"},(rule,parser,reporter)=>{parser.addListener("property",event=>{for(const e of event.value.parts)e.is0&&e.units&&"time"!==e.type&&reporter.report('"0" value with redundant units.',e,rule)})}]},CSSLint=Object.assign(new parserlib.util.EventDispatcher,{rules,getRuleList:()=>Object.values(rules).sort((e,t)=>e.id<t.id?-1:e.id>t.id),getRuleSet(){const e={};for(const t in rules)e[t]=1;return e},verify(text,e=this.getRuleSet()){const allow={},ignore=[];(a.lastIndex=text.lastIndexOf("/*",text.indexOf("csslint",text.indexOf("/*")+1||text.length)+1))>=0&&p(text,e=Object.assign({},e),allow,ignore);const parser=new parserlib.css.Parser({starHack:!0,ieFilters:!0,underscoreHack:!0,strict:!1}),reporter=new Reporter([],e,allow,ignore),{messages}=reporter,report={messages},t=[e,allow,ignore],reuseCache=!n||JSON.stringify(n)===JSON.stringify(t);n=t,e.errors=2;for(const[t,mode]of Object.entries(e)){const rule=mode&&rules[t];rule&&rule.init(rule,parser,reporter)}try{e.doc&&parser._stack.push(!0),parser.parse(text,{reuseCache})}catch(e){reporter.error("Fatal error, cannot continue!\n"+e.stack,e,{})}messages.sort((e,t)=>!!e.rollup-!!t.rollup||e.line-t.line||e.col-t.col);for(const msg of messages)(l.lastIndex=msg.message.indexOf("<"))>=0&&(msg.message=msg.message.replace(l,c));return parserlib.util.cache.feedback(report),report}});function p(text,e,allow,ignore){let t,r=null,o=null,lineno=0,eol=-1;for(;t=a.exec(text);){for(;eol<=t.index;)eol=text.indexOf("\n",eol+1),eol<0&&(eol=text.length),lineno++;const ovr=t[1].toLowerCase(),cmd=ovr.split(":",1)[0],i=cmd.length+1;switch(cmd.trim()){case"allow":{const e={};let num=0;ovr.slice(i).split(",").forEach(t=>{e[t.trim()]=!0,num++}),num&&(allow[lineno]=e);break}case"ignore":if(ovr.includes("start")){r=r||lineno;break}ovr.includes("end")&&(o=lineno,r&&o&&(ignore.push([r,o]),r=o=null));break;default:ovr.slice(i).split(",").forEach(rule=>{const pair=rule.split(":"),property=pair[0]||"",mapped=u[(pair[1]||"").trim()];e[property.trim()]=void 0===mapped?1:mapped})}}r&&ignore.push([r,lineno])}for(const e in rules){const[rule,init]=rules[e];rules[e]=rule,rule.id=e,rule.init=init,rule.url&&!rule.url.includes(":")&&(rule.url="https://github.com/CSSLint/csslint/wiki/"+rule.url)}return CSSLint})();