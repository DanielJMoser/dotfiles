"use strict";{const t=self;(()=>{var e={945:(t,exports)=>{function percentToByte(t){return String.fromCharCode(parseInt(t.slice(1),16))}function byteToPercent(t){return`%${`00${t.charCodeAt(0).toString(16)}`.slice(-2)}`}exports.encode=function(str){return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g,percentToByte))}}},r={};function n(t){var o=r[t];if(void 0!==o)return o.exports;var module=r[t]={exports:{}};return e[t](module,module.exports,n),module.exports}n.d=(exports,definition)=>{for(var key in definition)n.o(definition,key)&&!n.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},n.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop);var o={};function a(path){const dir=path.replace(/[/\\][^/\\]+[/\\]?$/,"");return dir===path?".":dir}function s({maxActiveReader:t=1/0}={}){let e,r,n=0;const self={read:t=>o(t,!1),write:t=>o(t,!0),length:0};return self;function o(t,block){const task=s({fn:t,block});return r?(r.next=task,task.prev=r,r=task,e||(e=r)):e=r=task,self.length++,c(),task.q.promise}function a(){const t={};return t.promise=new Promise((resolve,reject)=>{t.resolve=resolve,t.reject=reject}),t}function s({fn:t,block=!1,prev,next,q:e=a(),q2:r=(t.length?a():null)}){return{fn:t,block,prev,next,q:e,q2:r}}function c(){const task=e;if(!task||task.block&&task.prev||task.prev&&task.prev.block||n>=t)return;let result;task.block||n++,e=task.next;try{result=task.fn(task.q2&&task.q2.resolve)}catch(t){return task.q.reject(t),void onDone()}if(task.q2&&task.q2.promise.then(o),result&&result.then){const pending=result.then(task.q.resolve,task.q.reject);task.q2||pending.then(onDone)}else if(task.q.resolve(result),!task.q2)return void onDone();function onDone(){o()}function o(t){task.prev&&(task.prev.next=task.next),task.next&&(task.next.prev=task.prev),r===task&&(r=task.prev),task.block||n--,self.length--,t&&t(),c()}c()}}var browser=n(945);function delay(time){return new Promise(resolve=>setTimeout(resolve,time))}class RequestError extends Error{constructor(message,origin,code=origin&&origin.status){super(message),this.code=code,this.origin=origin,Error.captureStackTrace&&Error.captureStackTrace(this,RequestError)}}function c({fetch,cooldown:t=0,getAccessToken,username,password}){const lock=s(),e=username||password?`Basic ${browser.encode(`${username}:${password}`)}`:null;return args=>lock.write(async done=>{try{return await r(args)}finally{t&&args.method&&"GET"!==args.method?setTimeout(done,t):done()}});async function r({path,contentType:t,headers:r,format,raw=!1,...args}){const headers={};for(getAccessToken&&(headers.Authorization=`Bearer ${await getAccessToken()}`),e&&(headers.Authorization=e),t&&(headers["Content-Type"]=t),Object.assign(headers,r);;){const res=await fetch(path,{headers,...args});if(!res.ok){const retry=res.headers.get("Retry-After");if(retry){const time=Number(retry);if(time){await delay(1e3*time);continue}}const text=await res.text();throw new RequestError(`failed to fetch [${res.status}]: ${text}`,res)}if(raw)return res;if(format)return await res[format]();const t=res.headers.get("Content-Type");return/application\/json/.test(t)?await res.json():await res.text()}}}function i(t){return Array.isArray(t)?t:[t]}function u(node){const children=Array.prototype.filter.call(node.childNodes,t=>1===t.nodeType);if(!children.length)return node.textContent;const t={};for(const e of children){const r=u(e);if(t[e.localName])if(Array.isArray(t[e.localName]))t[e.localName].push(r);else{const list=[t[e.localName]];list.push(r),t[e.localName]=list}else t[e.localName]=r}return t}const webdav=function({username,password,url,fetch=("undefined"!=typeof self?self:t).fetch,DOMParser=("undefined"!=typeof self?self:t).DOMParser}){url.endsWith("/")||(url+="/");const request=c({fetch,username,password});return{name:"webdav",get:async function(file){return await e({method:"GET",path:file,format:"text"})},put:async function(file,data){return await r(a(file),()=>e({method:"PUT",path:file,contentType:"application/octet-stream",body:data}))},post:async function(file,data){try{return await r(a(file),()=>e({method:"PUT",path:file,body:data,contentType:"octet-stream",headers:{"If-None-Match":"*"}}))}catch(t){throw 412===t.code&&(t.code="EEXIST"),t}},delete:async function(file){try{await e({method:"DELETE",path:file})}catch(t){if(404===t.code)return;throw t}},list:async function(file){file.endsWith("/")||(file+="/");const result=await e({method:"PROPFIND",path:file,contentType:"application/xml",body:'<?xml version="1.0" encoding="utf-8" ?> \n        <propfind xmlns="DAV:">\n          <allprop/>\n        </propfind>',headers:{Depth:"1"}}),files=[];for(const entry of i(result.multistatus.response)){if(i(entry.propstat).some(t=>t.prop.resourcetype&&void 0!==t.prop.resourcetype.collection))continue;const base=`${url}${file}`,name=new URL(entry.href,base).href.slice(base.length);files.push(name)}return files}};async function e({path,...args}){const text=await request({path:`${url}${path}`,...args});if(args.format||"string"!=typeof text||!text)return text;const result=u((new DOMParser).parseFromString(text,"application/xml"));if(result.error)throw new Error(`Failed requesting DAV at ${url}${path}: ${JSON.stringify(result.error)}`);if(result.multistatus){result.multistatus.response=i(result.multistatus.response);for(const t of result.multistatus.response)if(t.error)throw new Error(`Failed requesting DAV at ${url}${path}: ${t.href} ${t.error}`)}return result}async function r(dir,t){try{return await t()}catch(t){if(409!==t.code&&404!==t.code||"."===dir)throw t}return await r(a(dir),()=>e({method:"MKCOL",path:dir})),await t()}};n.d(o,{default:()=>webdav}),self.webdav=o.default})()}