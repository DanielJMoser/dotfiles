"use strict";self;(self.webpackChunkStylus=self.webpackChunkStylus||[]).push([["edit_linter_dialogs_js"],{3253:(e,t,n)=>{n.r(t),t.showLintConfig=showLintConfig,t.showLintHelp=async function(){const target=await getLinter(),baseUrl="stylelint"===target?"https://stylelint.io/user-guide/rules/":"";let headerLink,makeItem;"csslint"===target?(headerLink=i.$createLink("https://github.com/CSSLint/csslint/wiki/Rules","CSSLint"),makeItem=ruleID=>{for(const rule of RULES.csslint)if(rule.id===ruleID)return i.$create("li",[i.$create("b",ruleID+": "),rule.url?i.$createLink(rule.url,rule.name):i.$create("span",`"${rule.name}"`),i.$create("p",rule.desc)])}):(headerLink=i.$createLink(baseUrl,"stylelint"),makeItem=rule=>i.$create("li","CssSyntaxError"===rule?rule:i.$createLink(baseUrl+rule,rule)));const header=l.t("linterIssuesHelp","").split("");c.helpPopup.show(l.t("linterIssues"),i.$create("div",[header[0],headerLink,header[1],i.$create("ul.rules",getActiveRules().map(makeItem)),i.$create("button",{onclick:showLintConfig},l.t("configureStyle"))]))};var s=n(7033),i=n(7986),r=n(3831),l=n(6940),o=n(9920),c=n(4849),a=n(8864),u=n(3432);const RULES={},KNOWN_RULES={},defaultConfig={};let cmDlg,knownRules,isStylelint,linter,popup;async function showLintConfig(){if(linter=await getLinter(),!linter)return;await Promise.all([n.e("codemirror"),n.e("node_modules_pnpm_usercss-meta_0_12_0_node_modules_usercss-meta_lib_parse-util_js")]).then(n.bind(n,6499));const config=await s.getLZValue(s.LZ_KEY[linter]),defaults=a.DEFAULTS[linter],title=l.t("linterConfigPopupTitle",isStylelint?"Stylelint":"CSSLint"),activeRules=new Set(getActiveRules());isStylelint="stylelint"===linter,knownRules=KNOWN_RULES[linter]||(KNOWN_RULES[linter]=new Set((isStylelint?Object.keys(RULES[linter]):RULES[linter].map(e=>e.id)).sort()));for(const cfg of[config,!defaultConfig[linter]&&defaults].filter(Boolean).map(getConfigRules)){const missingRules=new Set(knownRules);for(const e in cfg)cfg[e]&&knownRules.has(e)?missingRules.delete(e):/^[a-z]+(-[a-z]+)*$/.test(e)&&delete cfg[e];for(const e of missingRules)cfg[e]=!isStylelint&&0}defaultConfig[linter]=stringifyConfig(defaults),popup=c.showCodeMirrorPopup(title,null,{extraKeys:{"Ctrl-Enter":onConfigSave},hintOptions:{hint},lint:!0,mode:"application/json",value:config?stringifyConfig(config):defaultConfig[linter]}),popup._contents.appendChild(i.$create("div",[i.$create("p",[i.$createLink(isStylelint?"https://stylelint.io/user-guide/rules/":"https://github.com/CSSLint/csslint/wiki/Rules-by-ID",l.t("linterRulesLink")),"csslint"===linter?" "+l.t("linterCSSLintSettings"):""]),i.$create(".buttons",[i.$create("button.save",{onclick:onConfigSave,title:"Ctrl-Enter"},l.t("styleSaveLabel")),i.$create("button.cancel",{onclick:onConfigCancel},l.t("confirmClose")),i.$create("button.reset",{onclick:onConfigReset,title:l.t("linterResetMessage")},l.t("genericResetLabel"))])])),cmDlg=popup.codebox,cmDlg.focus(),cmDlg.addOverlay({token(stream){const tok=stream.baseToken();if(tok&&"string property"===tok.type){const e=stream.string.substr(stream.pos+1,tok.size-2);if(knownRules.has(e))return stream.pos+=tok.size,"string-2 known-linter-rule"+(activeRules.has(e)?" active-linter-rule":"")}stream.pos+=tok?tok.size:1e9}}),cmDlg.on("changes",updateConfigButtons),updateConfigButtons(),popup.onClose.add(onConfigClose)}function getActiveRules(){const all=[...u.getIssues()].map(issue=>issue.rule);return[...new Set(all)]}function getLexicalDepth(lexicalState){let depth=0;for(;lexicalState=lexicalState.prev;)depth++;return depth}async function getLinter(){const val=o.default.getCurrentLinter();return val&&!RULES[val]&&(RULES[val]=await c.worker.getRules(val)),val}function hint(e){const rules=RULES[linter];let ruleIds,options;isStylelint?(ruleIds=Object.keys(rules),options=rules):(ruleIds=rules.map(e=>e.id),options={});const cursor=e.getCursor(),{start,end,string,type,state:{lexical}}=e.getTokenAt(cursor),{line,ch:t}=cursor,quoted=string.startsWith('"'),leftPart=string.slice(quoted?1:0,t-start).trim(),depth=getLexicalDepth(lexical),search=e.getSearchCursor(/"([-\w]+)"/,{line,ch:start-1});let[,prevWord]=search.find(!0)||[],words=[];if(1===depth&&isStylelint)words=quoted?["rules"]:[];else if((1===depth||2===depth)&&type&&type.includes("property"))words=ruleIds;else if(2===depth||3===depth&&"]"===lexical.type)words=quoted?ruleIds.includes(prevWord)&&options[prevWord]?.[0]||[]:["true","false","null"];else if(4===depth&&"severity"===prevWord)words=["error","warning"];else if(4===depth)words=["ignore","ignoreAtRules","except","severity"];else if(5===depth&&"]"===lexical.type&&quoted){for(;prevWord&&!ruleIds.includes(prevWord);)prevWord=(search.find(!0)||[])[1];words=options[prevWord]?.slice(-1)[0]||ruleIds}return{list:words.filter(word=>word.startsWith(leftPart)),from:{line,ch:start+(quoted?1:0)},to:{line,ch:string.endsWith('"')?end-1:end}}}function onConfigCancel(){c.helpPopup.close(),o.default.closestVisible().focus()}function onConfigClose(){cmDlg=null}function onConfigReset(event){event.preventDefault(),cmDlg.setValue(defaultConfig[linter]),cmDlg.focus(),updateConfigButtons()}async function onConfigSave(event){event instanceof Event&&event.preventDefault();const json=l.tryJSONparse(cmDlg.getValue());if(!json)return showLinterErrorMessage(linter,l.t("linterJSONError")),void cmDlg.focus();const cfg=getConfigRules(json),defaults=getConfigRules(a.DEFAULTS[linter]);for(const e in defaults)e in cfg||(cfg[e]=!isStylelint&&0);for(const e in cfg){const def=defaults[e],val=cfg[e];(val?def&&JSON.stringify(val)===JSON.stringify(def):!def)&&delete cfg[e]}s.setLZValue(s.LZ_KEY[linter],json),cmDlg.markClean(),cmDlg.focus(),updateConfigButtons()}function getConfigRules(e){return isStylelint?e.rules||(e.rules={}):e}function stringifyConfig(config){return JSON.stringify(config,null,2).replace(/,\n\s+{\n\s+("severity":\s"\w+")\n\s+}/g,", {$1}")}async function showLinterErrorMessage(title,contents){await r.messageBox.show({title,contents,className:"danger center lint-config",buttons:[l.t("confirmOK")]}),popup?.codebox?.focus()}function updateConfigButtons(){popup.$(".save").disabled=cmDlg.isClean(),popup.$(".reset").disabled=cmDlg.getValue()===defaultConfig[linter],popup.$(".cancel").textContent=l.t(cmDlg.isClean()?"confirmClose":"confirmCancel")}}}]);